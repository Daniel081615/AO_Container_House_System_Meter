; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\ao_modbusprocess.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\ao_modbusprocess.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\NUC126\Include -I..\..\..\Library\StdDriver\inc -I..\..\..\NUC126_Series_BSP_CMSIS_V3.00.005\Library\StdDriver\inc -I..\..\..\NUC126_Series_BSP_CMSIS_V3.00.005\Library\Device\Nuvoton\NUC126\Include -I..\..\..\NUC126_Series_BSP_CMSIS_V3.00.005\Library\CMSIS\Include -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 --omf_browse=.\obj\ao_modbusprocess.crf ..\AO_ModBusProcess.c]
                          THUMB

                          AREA ||i.BAW2A_AddBalance||, CODE, READONLY, ALIGN=2

                  BAW2A_AddBalance PROC
;;;376    }
;;;377    void BAW2A_AddBalance(void)
000000  b510              PUSH     {r4,lr}
;;;378    {
;;;379        MeterMBCmd = MDBS_METER_OTHER ;
000002  201a              MOVS     r0,#0x1a
000004  4913              LDR      r1,|L1.84|
000006  7008              STRB     r0,[r1,#0]
;;;380        MeterTxBuffer[1]=0x10;          // Function 
000008  2010              MOVS     r0,#0x10
00000a  4913              LDR      r1,|L1.88|
00000c  7048              STRB     r0,[r1,#1]
;;;381        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;382        MeterTxBuffer[3]=0xD4;          // Data 1
000012  20d4              MOVS     r0,#0xd4
000014  70c8              STRB     r0,[r1,#3]
;;;383        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;384        MeterTxBuffer[5]=0x02;          // Data 3    
00001a  2002              MOVS     r0,#2
00001c  7148              STRB     r0,[r1,#5]
;;;385        MeterTxBuffer[6]=0x04;          // Data 3 
00001e  2004              MOVS     r0,#4
000020  7188              STRB     r0,[r1,#6]
;;;386        // Add 50000.00
;;;387        MeterTxBuffer[7]=0x33;          // Data 3 	( 實際加值為減 -0x33 = 0x00)
000022  2033              MOVS     r0,#0x33
000024  71c8              STRB     r0,[r1,#7]
;;;388        MeterTxBuffer[8]=0x7F;          // Data 3  ( 實際加值為減 -0x33 = 0x4C)
000026  207f              MOVS     r0,#0x7f
000028  7208              STRB     r0,[r1,#8]
;;;389        MeterTxBuffer[9]=0x7E;          // Data 3  ( 實際加值為減 -0x33 = 0x4B)
00002a  207e              MOVS     r0,#0x7e
00002c  7248              STRB     r0,[r1,#9]
;;;390        MeterTxBuffer[10]=0x73;        // Data 3 	( 實際加值為減 -0x33 = 0x40)
00002e  2073              MOVS     r0,#0x73
000030  7288              STRB     r0,[r1,#0xa]
;;;391        CRC16(MeterTxBuffer,11);
000032  210b              MOVS     r1,#0xb
000034  4808              LDR      r0,|L1.88|
000036  f7fffffe          BL       CRC16
;;;392        MeterTxBuffer[11]=uchCRCHi;      // // CRC Checksum 
00003a  4808              LDR      r0,|L1.92|
00003c  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00003e  4906              LDR      r1,|L1.88|
000040  72c8              STRB     r0,[r1,#0xb]
;;;393        MeterTxBuffer[12]=uchCRCLo;      // // CRC Checksum 
000042  4807              LDR      r0,|L1.96|
000044  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000046  7308              STRB     r0,[r1,#0xc]
;;;394        _SendStringToMETER(MeterTxBuffer,13);   
000048  210d              MOVS     r1,#0xd
00004a  4803              LDR      r0,|L1.88|
00004c  f7fffffe          BL       _SendStringToMETER
;;;395    }
000050  bd10              POP      {r4,pc}
;;;396    void BAW2A_ExitTestMode(void)
                          ENDP

000052  0000              DCW      0x0000
                  |L1.84|
                          DCD      MeterMBCmd
                  |L1.88|
                          DCD      MeterTxBuffer
                  |L1.92|
                          DCD      uchCRCHi
                  |L1.96|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_ExitTestMode||, CODE, READONLY, ALIGN=2

                  BAW2A_ExitTestMode PROC
;;;395    }
;;;396    void BAW2A_ExitTestMode(void)
000000  b510              PUSH     {r4,lr}
;;;397    {
;;;398        MeterMBCmd = MDBS_METER_OTHER ;
000002  201a              MOVS     r0,#0x1a
000004  4910              LDR      r1,|L2.72|
000006  7008              STRB     r0,[r1,#0]
;;;399        MeterTxBuffer[1]=0x10;          // Function 
000008  2010              MOVS     r0,#0x10
00000a  4910              LDR      r1,|L2.76|
00000c  7048              STRB     r0,[r1,#1]
;;;400        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;401        MeterTxBuffer[3]=0x49;          // Data 1
000012  2049              MOVS     r0,#0x49
000014  70c8              STRB     r0,[r1,#3]
;;;402        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;403        MeterTxBuffer[5]=0x01;          // Data 3    
00001a  2001              MOVS     r0,#1
00001c  7148              STRB     r0,[r1,#5]
;;;404        MeterTxBuffer[6]=0x02;          // Data 3 
00001e  2002              MOVS     r0,#2
000020  7188              STRB     r0,[r1,#6]
;;;405        MeterTxBuffer[7]=0x00;          // Data 3 
000022  2000              MOVS     r0,#0
000024  71c8              STRB     r0,[r1,#7]
;;;406        MeterTxBuffer[8]=0x00;          // Data 3 
000026  7208              STRB     r0,[r1,#8]
;;;407        CRC16(MeterTxBuffer,9);
000028  2109              MOVS     r1,#9
00002a  4808              LDR      r0,|L2.76|
00002c  f7fffffe          BL       CRC16
;;;408        MeterTxBuffer[9]=uchCRCHi;      // // CRC Checksum 
000030  4807              LDR      r0,|L2.80|
000032  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000034  4905              LDR      r1,|L2.76|
000036  7248              STRB     r0,[r1,#9]
;;;409        MeterTxBuffer[10]=uchCRCLo;      // // CRC Checksum 
000038  4806              LDR      r0,|L2.84|
00003a  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
00003c  7288              STRB     r0,[r1,#0xa]
;;;410        _SendStringToMETER(MeterTxBuffer,11);   
00003e  210b              MOVS     r1,#0xb
000040  4802              LDR      r0,|L2.76|
000042  f7fffffe          BL       _SendStringToMETER
;;;411    }
000046  bd10              POP      {r4,pc}
;;;412    void BAW2A_Get_V(void)
                          ENDP

                  |L2.72|
                          DCD      MeterMBCmd
                  |L2.76|
                          DCD      MeterTxBuffer
                  |L2.80|
                          DCD      uchCRCHi
                  |L2.84|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_GetBalance||, CODE, READONLY, ALIGN=2

                  BAW2A_GetBalance PROC
;;;274    }
;;;275    void BAW2A_GetBalance(void)
000000  b510              PUSH     {r4,lr}
;;;276    {
;;;277        MeterMBCmd = MDBS_METER_GET_BAL ;
000002  200c              MOVS     r0,#0xc
000004  490f              LDR      r1,|L3.68|
000006  7008              STRB     r0,[r1,#0]
;;;278        bReadPowerMeterValue = 1 ;			
000008  2001              MOVS     r0,#1
00000a  490f              LDR      r1,|L3.72|
00000c  7008              STRB     r0,[r1,#0]
;;;279        MeterTxBuffer[1]=0x03;          // Function 
00000e  2003              MOVS     r0,#3
000010  490e              LDR      r1,|L3.76|
000012  7048              STRB     r0,[r1,#1]
;;;280        MeterTxBuffer[2]=0x00;          // Data 0
000014  2000              MOVS     r0,#0
000016  7088              STRB     r0,[r1,#2]
;;;281        MeterTxBuffer[3]=0x0A;          // Data 1
000018  200a              MOVS     r0,#0xa
00001a  70c8              STRB     r0,[r1,#3]
;;;282        MeterTxBuffer[4]=0x00;          // Data 2
00001c  2000              MOVS     r0,#0
00001e  7108              STRB     r0,[r1,#4]
;;;283        MeterTxBuffer[5]=0x02;          // Data 3
000020  2002              MOVS     r0,#2
000022  7148              STRB     r0,[r1,#5]
;;;284        CRC16(MeterTxBuffer,6);
000024  2106              MOVS     r1,#6
000026  4809              LDR      r0,|L3.76|
000028  f7fffffe          BL       CRC16
;;;285        MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
00002c  4808              LDR      r0,|L3.80|
00002e  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000030  4906              LDR      r1,|L3.76|
000032  7188              STRB     r0,[r1,#6]
;;;286        MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
000034  4807              LDR      r0,|L3.84|
000036  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000038  71c8              STRB     r0,[r1,#7]
;;;287        _SendStringToMETER(MeterTxBuffer,8);   			
00003a  2108              MOVS     r1,#8
00003c  4803              LDR      r0,|L3.76|
00003e  f7fffffe          BL       _SendStringToMETER
;;;288    }
000042  bd10              POP      {r4,pc}
;;;289    void BAW2A_GetRelayStatus(void)
                          ENDP

                  |L3.68|
                          DCD      MeterMBCmd
                  |L3.72|
                          DCD      bReadPowerMeterValue
                  |L3.76|
                          DCD      MeterTxBuffer
                  |L3.80|
                          DCD      uchCRCHi
                  |L3.84|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_GetCardID||, CODE, READONLY, ALIGN=2

                  BAW2A_GetCardID PROC
;;;572    }
;;;573    void BAW2A_GetCardID(void)
000000  b510              PUSH     {r4,lr}
;;;574    {
;;;575        MeterMBCmd = MDBS_METER_GET_CARD_ID ;
000002  2015              MOVS     r0,#0x15
000004  490e              LDR      r1,|L4.64|
000006  7008              STRB     r0,[r1,#0]
;;;576        MeterTxBuffer[1]=0x03;          // Function 
000008  2003              MOVS     r0,#3
00000a  490e              LDR      r1,|L4.68|
00000c  7048              STRB     r0,[r1,#1]
;;;577        MeterTxBuffer[2]=0x01;          // Data 0
00000e  2001              MOVS     r0,#1
000010  7088              STRB     r0,[r1,#2]
;;;578        MeterTxBuffer[3]=0x23;          // Data 1 ( 功率因子 )
000012  2023              MOVS     r0,#0x23
000014  70c8              STRB     r0,[r1,#3]
;;;579        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;580        MeterTxBuffer[5]=0x04;          // Data 3
00001a  2004              MOVS     r0,#4
00001c  7148              STRB     r0,[r1,#5]
;;;581        CRC16(MeterTxBuffer,6);
00001e  2106              MOVS     r1,#6
000020  4808              LDR      r0,|L4.68|
000022  f7fffffe          BL       CRC16
;;;582        MeterTxBuffer[6]=uchCRCHi;      // CRC Checksum 
000026  4808              LDR      r0,|L4.72|
000028  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00002a  4906              LDR      r1,|L4.68|
00002c  7188              STRB     r0,[r1,#6]
;;;583        MeterTxBuffer[7]=uchCRCLo;     // CRC Checksum 
00002e  4807              LDR      r0,|L4.76|
000030  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000032  71c8              STRB     r0,[r1,#7]
;;;584        _SendStringToMETER(MeterTxBuffer,8);   	
000034  2108              MOVS     r1,#8
000036  4803              LDR      r0,|L4.68|
000038  f7fffffe          BL       _SendStringToMETER
;;;585    }
00003c  bd10              POP      {r4,pc}
;;;586    
                          ENDP

00003e  0000              DCW      0x0000
                  |L4.64|
                          DCD      MeterMBCmd
                  |L4.68|
                          DCD      MeterTxBuffer
                  |L4.72|
                          DCD      uchCRCHi
                  |L4.76|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_GetPayMode||, CODE, READONLY, ALIGN=2

                  BAW2A_GetPayMode PROC
;;;546    
;;;547    void BAW2A_GetPayMode(void)
000000  b510              PUSH     {r4,lr}
;;;548    {
;;;549        MeterMBCmd = MDBS_METER_GET_MODE ;
000002  2013              MOVS     r0,#0x13
000004  490e              LDR      r1,|L5.64|
000006  7008              STRB     r0,[r1,#0]
;;;550        MeterTxBuffer[1]=0x03;          // Function 
000008  2003              MOVS     r0,#3
00000a  490e              LDR      r1,|L5.68|
00000c  7048              STRB     r0,[r1,#1]
;;;551        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;552        MeterTxBuffer[3]=0xE0;          // Data 1 
000012  20e0              MOVS     r0,#0xe0
000014  70c8              STRB     r0,[r1,#3]
;;;553        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;554        MeterTxBuffer[5]=0x01;          // Data 3
00001a  2001              MOVS     r0,#1
00001c  7148              STRB     r0,[r1,#5]
;;;555        CRC16(MeterTxBuffer,6);
00001e  2106              MOVS     r1,#6
000020  4808              LDR      r0,|L5.68|
000022  f7fffffe          BL       CRC16
;;;556        MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000026  4808              LDR      r0,|L5.72|
000028  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00002a  4906              LDR      r1,|L5.68|
00002c  7188              STRB     r0,[r1,#6]
;;;557        MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
00002e  4807              LDR      r0,|L5.76|
000030  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000032  71c8              STRB     r0,[r1,#7]
;;;558        _SendStringToMETER(MeterTxBuffer,8);   			
000034  2108              MOVS     r1,#8
000036  4803              LDR      r0,|L5.68|
000038  f7fffffe          BL       _SendStringToMETER
;;;559    }
00003c  bd10              POP      {r4,pc}
;;;560    void BAW2A_GetStatus(void)
                          ENDP

00003e  0000              DCW      0x0000
                  |L5.64|
                          DCD      MeterMBCmd
                  |L5.68|
                          DCD      MeterTxBuffer
                  |L5.72|
                          DCD      uchCRCHi
                  |L5.76|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_GetRelayStatus||, CODE, READONLY, ALIGN=2

                  BAW2A_GetRelayStatus PROC
;;;288    }
;;;289    void BAW2A_GetRelayStatus(void)
000000  b510              PUSH     {r4,lr}
;;;290    {
;;;291    
;;;292        MeterMBCmd = MDBS_METER_GET_RELAY ;
000002  2005              MOVS     r0,#5
000004  490f              LDR      r1,|L6.68|
000006  7008              STRB     r0,[r1,#0]
;;;293        bReadPowerMeterValue = 1 ;			
000008  2001              MOVS     r0,#1
00000a  490f              LDR      r1,|L6.72|
00000c  7008              STRB     r0,[r1,#0]
;;;294        MeterTxBuffer[1]=0x03;          // Function 
00000e  2003              MOVS     r0,#3
000010  490e              LDR      r1,|L6.76|
000012  7048              STRB     r0,[r1,#1]
;;;295        MeterTxBuffer[2]=0x00;          // Data 0
000014  2000              MOVS     r0,#0
000016  7088              STRB     r0,[r1,#2]
;;;296        MeterTxBuffer[3]=0x02;          // Data 1
000018  2002              MOVS     r0,#2
00001a  70c8              STRB     r0,[r1,#3]
;;;297        MeterTxBuffer[4]=0x00;          // Data 2
00001c  2000              MOVS     r0,#0
00001e  7108              STRB     r0,[r1,#4]
;;;298        MeterTxBuffer[5]=0x01;          // Data 3
000020  2001              MOVS     r0,#1
000022  7148              STRB     r0,[r1,#5]
;;;299        CRC16(MeterTxBuffer,6);
000024  2106              MOVS     r1,#6
000026  4809              LDR      r0,|L6.76|
000028  f7fffffe          BL       CRC16
;;;300        MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
00002c  4808              LDR      r0,|L6.80|
00002e  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000030  4906              LDR      r1,|L6.76|
000032  7188              STRB     r0,[r1,#6]
;;;301        MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
000034  4807              LDR      r0,|L6.84|
000036  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000038  71c8              STRB     r0,[r1,#7]
;;;302        _SendStringToMETER(MeterTxBuffer,8);   				
00003a  2108              MOVS     r1,#8
00003c  4803              LDR      r0,|L6.76|
00003e  f7fffffe          BL       _SendStringToMETER
;;;303    
;;;304    }
000042  bd10              POP      {r4,pc}
;;;305    
                          ENDP

                  |L6.68|
                          DCD      MeterMBCmd
                  |L6.72|
                          DCD      bReadPowerMeterValue
                  |L6.76|
                          DCD      MeterTxBuffer
                  |L6.80|
                          DCD      uchCRCHi
                  |L6.84|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_GetStatus||, CODE, READONLY, ALIGN=2

                  BAW2A_GetStatus PROC
;;;559    }
;;;560    void BAW2A_GetStatus(void)
000000  b510              PUSH     {r4,lr}
;;;561    {
;;;562        MeterMBCmd = MDBS_METER_GET_STATUS ;
000002  2014              MOVS     r0,#0x14
000004  490e              LDR      r1,|L7.64|
000006  7008              STRB     r0,[r1,#0]
;;;563        MeterTxBuffer[1]=0x03;          // Function 
000008  2003              MOVS     r0,#3
00000a  490e              LDR      r1,|L7.68|
00000c  7048              STRB     r0,[r1,#1]
;;;564        MeterTxBuffer[2]=0x01;          // Data 0
00000e  2001              MOVS     r0,#1
000010  7088              STRB     r0,[r1,#2]
;;;565        MeterTxBuffer[3]=0x22;          // Data 1 
000012  2022              MOVS     r0,#0x22
000014  70c8              STRB     r0,[r1,#3]
;;;566        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;567        MeterTxBuffer[5]=0x01;          // Data 3
00001a  2001              MOVS     r0,#1
00001c  7148              STRB     r0,[r1,#5]
;;;568        CRC16(MeterTxBuffer,6);
00001e  2106              MOVS     r1,#6
000020  4808              LDR      r0,|L7.68|
000022  f7fffffe          BL       CRC16
;;;569        MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000026  4808              LDR      r0,|L7.72|
000028  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00002a  4906              LDR      r1,|L7.68|
00002c  7188              STRB     r0,[r1,#6]
;;;570        MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
00002e  4807              LDR      r0,|L7.76|
000030  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000032  71c8              STRB     r0,[r1,#7]
;;;571        _SendStringToMETER(MeterTxBuffer,8);   
000034  2108              MOVS     r1,#8
000036  4803              LDR      r0,|L7.68|
000038  f7fffffe          BL       _SendStringToMETER
;;;572    }
00003c  bd10              POP      {r4,pc}
;;;573    void BAW2A_GetCardID(void)
                          ENDP

00003e  0000              DCW      0x0000
                  |L7.64|
                          DCD      MeterMBCmd
                  |L7.68|
                          DCD      MeterTxBuffer
                  |L7.72|
                          DCD      uchCRCHi
                  |L7.76|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_GetWatt||, CODE, READONLY, ALIGN=2

                  BAW2A_GetWatt PROC
;;;260    }
;;;261    void BAW2A_GetWatt(void)
000000  b510              PUSH     {r4,lr}
;;;262    {
;;;263        MeterMBCmd = MDBS_METER_GET_WATT ;
000002  2001              MOVS     r0,#1
000004  490f              LDR      r1,|L8.68|
000006  7008              STRB     r0,[r1,#0]
;;;264        bReadPowerMeterValue = 1 ;			
000008  490f              LDR      r1,|L8.72|
00000a  7008              STRB     r0,[r1,#0]
;;;265        MeterTxBuffer[1]=0x03;          // Function 
00000c  2003              MOVS     r0,#3
00000e  490f              LDR      r1,|L8.76|
000010  7048              STRB     r0,[r1,#1]
;;;266        MeterTxBuffer[2]=0x00;          // Data 0
000012  2000              MOVS     r0,#0
000014  7088              STRB     r0,[r1,#2]
;;;267        MeterTxBuffer[3]=0x06;          // Data 1
000016  2006              MOVS     r0,#6
000018  70c8              STRB     r0,[r1,#3]
;;;268        MeterTxBuffer[4]=0x00;          // Data 2
00001a  2000              MOVS     r0,#0
00001c  7108              STRB     r0,[r1,#4]
;;;269        MeterTxBuffer[5]=0x02;          // Data 3
00001e  2002              MOVS     r0,#2
000020  7148              STRB     r0,[r1,#5]
;;;270        CRC16(MeterTxBuffer,6);
000022  2106              MOVS     r1,#6
000024  4809              LDR      r0,|L8.76|
000026  f7fffffe          BL       CRC16
;;;271        MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
00002a  4809              LDR      r0,|L8.80|
00002c  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00002e  4907              LDR      r1,|L8.76|
000030  7188              STRB     r0,[r1,#6]
;;;272        MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
000032  4808              LDR      r0,|L8.84|
000034  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000036  71c8              STRB     r0,[r1,#7]
;;;273        _SendStringToMETER(MeterTxBuffer,8);   					
000038  2108              MOVS     r1,#8
00003a  4804              LDR      r0,|L8.76|
00003c  f7fffffe          BL       _SendStringToMETER
;;;274    }
000040  bd10              POP      {r4,pc}
;;;275    void BAW2A_GetBalance(void)
                          ENDP

000042  0000              DCW      0x0000
                  |L8.68|
                          DCD      MeterMBCmd
                  |L8.72|
                          DCD      bReadPowerMeterValue
                  |L8.76|
                          DCD      MeterTxBuffer
                  |L8.80|
                          DCD      uchCRCHi
                  |L8.84|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_Get_F||, CODE, READONLY, ALIGN=2

                  BAW2A_Get_F PROC
;;;437    }
;;;438    void BAW2A_Get_F(void)
000000  b510              PUSH     {r4,lr}
;;;439    {
;;;440        MeterMBCmd = MDBS_METER_GET_F ;
000002  200f              MOVS     r0,#0xf
000004  490e              LDR      r1,|L9.64|
000006  7008              STRB     r0,[r1,#0]
;;;441        MeterTxBuffer[1]=0x03;          // Function 
000008  2003              MOVS     r0,#3
00000a  490e              LDR      r1,|L9.68|
00000c  7048              STRB     r0,[r1,#1]
;;;442        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;443        MeterTxBuffer[3]=0xDA;          // Data 1
000012  20da              MOVS     r0,#0xda
000014  70c8              STRB     r0,[r1,#3]
;;;444        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;445        MeterTxBuffer[5]=0x01;          // Data 3
00001a  2001              MOVS     r0,#1
00001c  7148              STRB     r0,[r1,#5]
;;;446        CRC16(MeterTxBuffer,6);
00001e  2106              MOVS     r1,#6
000020  4808              LDR      r0,|L9.68|
000022  f7fffffe          BL       CRC16
;;;447        MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000026  4808              LDR      r0,|L9.72|
000028  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00002a  4906              LDR      r1,|L9.68|
00002c  7188              STRB     r0,[r1,#6]
;;;448        MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
00002e  4807              LDR      r0,|L9.76|
000030  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000032  71c8              STRB     r0,[r1,#7]
;;;449        _SendStringToMETER(MeterTxBuffer,8);   		
000034  2108              MOVS     r1,#8
000036  4803              LDR      r0,|L9.68|
000038  f7fffffe          BL       _SendStringToMETER
;;;450    }
00003c  bd10              POP      {r4,pc}
;;;451    void BAW2A_Get_P(void)
                          ENDP

00003e  0000              DCW      0x0000
                  |L9.64|
                          DCD      MeterMBCmd
                  |L9.68|
                          DCD      MeterTxBuffer
                  |L9.72|
                          DCD      uchCRCHi
                  |L9.76|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_Get_I||, CODE, READONLY, ALIGN=2

                  BAW2A_Get_I PROC
;;;424    }
;;;425    void BAW2A_Get_I(void)
000000  b510              PUSH     {r4,lr}
;;;426    {
;;;427        MeterMBCmd = MDBS_METER_GET_I ;
000002  200e              MOVS     r0,#0xe
000004  490e              LDR      r1,|L10.64|
000006  7008              STRB     r0,[r1,#0]
;;;428        MeterTxBuffer[1]=0x03;          // Function 
000008  2003              MOVS     r0,#3
00000a  490e              LDR      r1,|L10.68|
00000c  7048              STRB     r0,[r1,#1]
;;;429        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;430        MeterTxBuffer[3]=0xD8;          // Data 1
000012  20d8              MOVS     r0,#0xd8
000014  70c8              STRB     r0,[r1,#3]
;;;431        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;432        MeterTxBuffer[5]=0x02;          // Data 3
00001a  2002              MOVS     r0,#2
00001c  7148              STRB     r0,[r1,#5]
;;;433        CRC16(MeterTxBuffer,6);
00001e  2106              MOVS     r1,#6
000020  4808              LDR      r0,|L10.68|
000022  f7fffffe          BL       CRC16
;;;434        MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000026  4808              LDR      r0,|L10.72|
000028  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00002a  4906              LDR      r1,|L10.68|
00002c  7188              STRB     r0,[r1,#6]
;;;435        MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
00002e  4807              LDR      r0,|L10.76|
000030  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000032  71c8              STRB     r0,[r1,#7]
;;;436        _SendStringToMETER(MeterTxBuffer,8); 
000034  2108              MOVS     r1,#8
000036  4803              LDR      r0,|L10.68|
000038  f7fffffe          BL       _SendStringToMETER
;;;437    }
00003c  bd10              POP      {r4,pc}
;;;438    void BAW2A_Get_F(void)
                          ENDP

00003e  0000              DCW      0x0000
                  |L10.64|
                          DCD      MeterMBCmd
                  |L10.68|
                          DCD      MeterTxBuffer
                  |L10.72|
                          DCD      uchCRCHi
                  |L10.76|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_Get_P||, CODE, READONLY, ALIGN=2

                  BAW2A_Get_P PROC
;;;450    }
;;;451    void BAW2A_Get_P(void)
000000  b510              PUSH     {r4,lr}
;;;452    {
;;;453        MeterMBCmd = MDBS_METER_GET_P ;
000002  2010              MOVS     r0,#0x10
000004  490e              LDR      r1,|L11.64|
000006  7008              STRB     r0,[r1,#0]
;;;454        MeterTxBuffer[1]=0x03;          // Function 
000008  2003              MOVS     r0,#3
00000a  490e              LDR      r1,|L11.68|
00000c  7048              STRB     r0,[r1,#1]
;;;455        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;456        MeterTxBuffer[3]=0xDB;          // Data 1 ( 有功功率 )
000012  20db              MOVS     r0,#0xdb
000014  70c8              STRB     r0,[r1,#3]
;;;457        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;458        MeterTxBuffer[5]=0x02;          // Data 3
00001a  2002              MOVS     r0,#2
00001c  7148              STRB     r0,[r1,#5]
;;;459        CRC16(MeterTxBuffer,6);
00001e  2106              MOVS     r1,#6
000020  4808              LDR      r0,|L11.68|
000022  f7fffffe          BL       CRC16
;;;460        MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000026  4808              LDR      r0,|L11.72|
000028  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00002a  4906              LDR      r1,|L11.68|
00002c  7188              STRB     r0,[r1,#6]
;;;461        MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
00002e  4807              LDR      r0,|L11.76|
000030  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000032  71c8              STRB     r0,[r1,#7]
;;;462        _SendStringToMETER(MeterTxBuffer,8);
000034  2108              MOVS     r1,#8
000036  4803              LDR      r0,|L11.68|
000038  f7fffffe          BL       _SendStringToMETER
;;;463    }
00003c  bd10              POP      {r4,pc}
;;;464    void BAW2A_Get_S(void)
                          ENDP

00003e  0000              DCW      0x0000
                  |L11.64|
                          DCD      MeterMBCmd
                  |L11.68|
                          DCD      MeterTxBuffer
                  |L11.72|
                          DCD      uchCRCHi
                  |L11.76|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_Get_PF||, CODE, READONLY, ALIGN=2

                  BAW2A_Get_PF PROC
;;;476    }
;;;477    void BAW2A_Get_PF(void)
000000  b510              PUSH     {r4,lr}
;;;478    {
;;;479        MeterMBCmd = MDBS_METER_GET_PF ;
000002  2012              MOVS     r0,#0x12
000004  490e              LDR      r1,|L12.64|
000006  7008              STRB     r0,[r1,#0]
;;;480        MeterTxBuffer[1]=0x03;          // Function 
000008  2003              MOVS     r0,#3
00000a  490e              LDR      r1,|L12.68|
00000c  7048              STRB     r0,[r1,#1]
;;;481        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;482        MeterTxBuffer[3]=0xDF;          // Data 1 ( 功率因子 )
000012  20df              MOVS     r0,#0xdf
000014  70c8              STRB     r0,[r1,#3]
;;;483        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;484        MeterTxBuffer[5]=0x01;          // Data 3
00001a  2001              MOVS     r0,#1
00001c  7148              STRB     r0,[r1,#5]
;;;485        CRC16(MeterTxBuffer,6);
00001e  2106              MOVS     r1,#6
000020  4808              LDR      r0,|L12.68|
000022  f7fffffe          BL       CRC16
;;;486        MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000026  4808              LDR      r0,|L12.72|
000028  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00002a  4906              LDR      r1,|L12.68|
00002c  7188              STRB     r0,[r1,#6]
;;;487        MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
00002e  4807              LDR      r0,|L12.76|
000030  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000032  71c8              STRB     r0,[r1,#7]
;;;488        _SendStringToMETER(MeterTxBuffer,8);   	
000034  2108              MOVS     r1,#8
000036  4803              LDR      r0,|L12.68|
000038  f7fffffe          BL       _SendStringToMETER
;;;489    }
00003c  bd10              POP      {r4,pc}
;;;490    void BAW2A_SetPayMode(void)
                          ENDP

00003e  0000              DCW      0x0000
                  |L12.64|
                          DCD      MeterMBCmd
                  |L12.68|
                          DCD      MeterTxBuffer
                  |L12.72|
                          DCD      uchCRCHi
                  |L12.76|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_Get_S||, CODE, READONLY, ALIGN=2

                  BAW2A_Get_S PROC
;;;463    }
;;;464    void BAW2A_Get_S(void)
000000  b510              PUSH     {r4,lr}
;;;465    {
;;;466        MeterMBCmd = MDBS_METER_GET_S ;
000002  2011              MOVS     r0,#0x11
000004  490e              LDR      r1,|L13.64|
000006  7008              STRB     r0,[r1,#0]
;;;467        MeterTxBuffer[1]=0x03;          // Function 
000008  2003              MOVS     r0,#3
00000a  490e              LDR      r1,|L13.68|
00000c  7048              STRB     r0,[r1,#1]
;;;468        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;469        MeterTxBuffer[3]=0xDD;          // Data 1 ( 視在功率 )
000012  20dd              MOVS     r0,#0xdd
000014  70c8              STRB     r0,[r1,#3]
;;;470        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;471        MeterTxBuffer[5]=0x02;          // Data 3
00001a  2002              MOVS     r0,#2
00001c  7148              STRB     r0,[r1,#5]
;;;472        CRC16(MeterTxBuffer,6);					// 
00001e  2106              MOVS     r1,#6
000020  4808              LDR      r0,|L13.68|
000022  f7fffffe          BL       CRC16
;;;473        MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000026  4808              LDR      r0,|L13.72|
000028  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00002a  4906              LDR      r1,|L13.68|
00002c  7188              STRB     r0,[r1,#6]
;;;474        MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
00002e  4807              LDR      r0,|L13.76|
000030  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000032  71c8              STRB     r0,[r1,#7]
;;;475        _SendStringToMETER(MeterTxBuffer,8);   			
000034  2108              MOVS     r1,#8
000036  4803              LDR      r0,|L13.68|
000038  f7fffffe          BL       _SendStringToMETER
;;;476    }
00003c  bd10              POP      {r4,pc}
;;;477    void BAW2A_Get_PF(void)
                          ENDP

00003e  0000              DCW      0x0000
                  |L13.64|
                          DCD      MeterMBCmd
                  |L13.68|
                          DCD      MeterTxBuffer
                  |L13.72|
                          DCD      uchCRCHi
                  |L13.76|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_Get_V||, CODE, READONLY, ALIGN=2

                  BAW2A_Get_V PROC
;;;411    }
;;;412    void BAW2A_Get_V(void)
000000  b510              PUSH     {r4,lr}
;;;413    {
;;;414        MeterMBCmd = MDBS_METER_GET_V ;
000002  200d              MOVS     r0,#0xd
000004  490e              LDR      r1,|L14.64|
000006  7008              STRB     r0,[r1,#0]
;;;415        MeterTxBuffer[1]=0x03;          // Function 
000008  2003              MOVS     r0,#3
00000a  490e              LDR      r1,|L14.68|
00000c  7048              STRB     r0,[r1,#1]
;;;416        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;417        MeterTxBuffer[3]=0xD6;          // Data 1
000012  20d6              MOVS     r0,#0xd6
000014  70c8              STRB     r0,[r1,#3]
;;;418        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;419        MeterTxBuffer[5]=0x02;          // Data 3
00001a  2002              MOVS     r0,#2
00001c  7148              STRB     r0,[r1,#5]
;;;420        CRC16(MeterTxBuffer,6);
00001e  2106              MOVS     r1,#6
000020  4808              LDR      r0,|L14.68|
000022  f7fffffe          BL       CRC16
;;;421        MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000026  4808              LDR      r0,|L14.72|
000028  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00002a  4906              LDR      r1,|L14.68|
00002c  7188              STRB     r0,[r1,#6]
;;;422        MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
00002e  4807              LDR      r0,|L14.76|
000030  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000032  71c8              STRB     r0,[r1,#7]
;;;423        _SendStringToMETER(MeterTxBuffer,8); 
000034  2108              MOVS     r1,#8
000036  4803              LDR      r0,|L14.68|
000038  f7fffffe          BL       _SendStringToMETER
;;;424    }
00003c  bd10              POP      {r4,pc}
;;;425    void BAW2A_Get_I(void)
                          ENDP

00003e  0000              DCW      0x0000
                  |L14.64|
                          DCD      MeterMBCmd
                  |L14.68|
                          DCD      MeterTxBuffer
                  |L14.72|
                          DCD      uchCRCHi
                  |L14.76|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_SetAddr||, CODE, READONLY, ALIGN=2

                  BAW2A_SetAddr PROC
;;;326    }
;;;327    void BAW2A_SetAddr(void)
000000  b510              PUSH     {r4,lr}
;;;328    {
;;;329        MeterMBCmd = MDBS_METER_OTHER ;
000002  201a              MOVS     r0,#0x1a
000004  4911              LDR      r1,|L15.76|
000006  7008              STRB     r0,[r1,#0]
;;;330        MeterTxBuffer[1]=0x10;          // Function 
000008  2010              MOVS     r0,#0x10
00000a  4911              LDR      r1,|L15.80|
00000c  7048              STRB     r0,[r1,#1]
;;;331        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;332        MeterTxBuffer[3]=0x0E;          // Data 1
000012  200e              MOVS     r0,#0xe
000014  70c8              STRB     r0,[r1,#3]
;;;333        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;334        MeterTxBuffer[5]=0x01;          // Data 3 
00001a  2001              MOVS     r0,#1
00001c  7148              STRB     r0,[r1,#5]
;;;335        MeterTxBuffer[6]=0x02;          // Data 3 
00001e  2002              MOVS     r0,#2
000020  7188              STRB     r0,[r1,#6]
;;;336        MeterTxBuffer[7]=PowerMeterNewAddr;          // Data 3 
000022  480c              LDR      r0,|L15.84|
000024  7800              LDRB     r0,[r0,#0]  ; PowerMeterNewAddr
000026  71c8              STRB     r0,[r1,#7]
;;;337        MeterTxBuffer[8]=0x00;          // Data 3 
000028  2000              MOVS     r0,#0
00002a  7208              STRB     r0,[r1,#8]
;;;338        CRC16(MeterTxBuffer,9);
00002c  2109              MOVS     r1,#9
00002e  4808              LDR      r0,|L15.80|
000030  f7fffffe          BL       CRC16
;;;339        MeterTxBuffer[9]=uchCRCHi;      // // CRC Checksum 
000034  4808              LDR      r0,|L15.88|
000036  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000038  4905              LDR      r1,|L15.80|
00003a  7248              STRB     r0,[r1,#9]
;;;340        MeterTxBuffer[10]=uchCRCLo;      // // CRC Checksum 
00003c  4807              LDR      r0,|L15.92|
00003e  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000040  7288              STRB     r0,[r1,#0xa]
;;;341        _SendStringToMETER(MeterTxBuffer,11);   
000042  210b              MOVS     r1,#0xb
000044  4802              LDR      r0,|L15.80|
000046  f7fffffe          BL       _SendStringToMETER
;;;342    }
00004a  bd10              POP      {r4,pc}
;;;343    void BAW2A_SetBuadrate(void)
                          ENDP

                  |L15.76|
                          DCD      MeterMBCmd
                  |L15.80|
                          DCD      MeterTxBuffer
                  |L15.84|
                          DCD      PowerMeterNewAddr
                  |L15.88|
                          DCD      uchCRCHi
                  |L15.92|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_SetBuadrate||, CODE, READONLY, ALIGN=2

                  BAW2A_SetBuadrate PROC
;;;342    }
;;;343    void BAW2A_SetBuadrate(void)
000000  b510              PUSH     {r4,lr}
;;;344    {
;;;345        MeterMBCmd = MDBS_METER_OTHER ;
000002  201a              MOVS     r0,#0x1a
000004  4911              LDR      r1,|L16.76|
000006  7008              STRB     r0,[r1,#0]
;;;346        MeterTxBuffer[1]=0x10;          // Function 
000008  2010              MOVS     r0,#0x10
00000a  4911              LDR      r1,|L16.80|
00000c  7048              STRB     r0,[r1,#1]
;;;347        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;348        MeterTxBuffer[3]=0xD3;          // Data 1
000012  20d3              MOVS     r0,#0xd3
000014  70c8              STRB     r0,[r1,#3]
;;;349        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;350        MeterTxBuffer[5]=0x01;          // Data 3    
00001a  2001              MOVS     r0,#1
00001c  7148              STRB     r0,[r1,#5]
;;;351        MeterTxBuffer[6]=0x02;          // Data 3 
00001e  2002              MOVS     r0,#2
000020  7188              STRB     r0,[r1,#6]
;;;352        MeterTxBuffer[7]=0x00;          // Data 3 
000022  2000              MOVS     r0,#0
000024  71c8              STRB     r0,[r1,#7]
;;;353        MeterTxBuffer[8]=PowerMeterBaudRate;          // Data 3 
000026  480b              LDR      r0,|L16.84|
000028  7800              LDRB     r0,[r0,#0]  ; PowerMeterBaudRate
00002a  7208              STRB     r0,[r1,#8]
;;;354        CRC16(MeterTxBuffer,9);
00002c  2109              MOVS     r1,#9
00002e  4808              LDR      r0,|L16.80|
000030  f7fffffe          BL       CRC16
;;;355        MeterTxBuffer[9]=uchCRCHi;      // // CRC Checksum 
000034  4808              LDR      r0,|L16.88|
000036  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000038  4905              LDR      r1,|L16.80|
00003a  7248              STRB     r0,[r1,#9]
;;;356        MeterTxBuffer[10]=uchCRCLo;      // // CRC Checksum 
00003c  4807              LDR      r0,|L16.92|
00003e  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000040  7288              STRB     r0,[r1,#0xa]
;;;357        _SendStringToMETER(MeterTxBuffer,11);  
000042  210b              MOVS     r1,#0xb
000044  4802              LDR      r0,|L16.80|
000046  f7fffffe          BL       _SendStringToMETER
;;;358    }
00004a  bd10              POP      {r4,pc}
;;;359    void BAW2A_SetPassword(void)
                          ENDP

                  |L16.76|
                          DCD      MeterMBCmd
                  |L16.80|
                          DCD      MeterTxBuffer
                  |L16.84|
                          DCD      PowerMeterBaudRate
                  |L16.88|
                          DCD      uchCRCHi
                  |L16.92|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_SetPassword||, CODE, READONLY, ALIGN=2

                  BAW2A_SetPassword PROC
;;;358    }
;;;359    void BAW2A_SetPassword(void)
000000  b510              PUSH     {r4,lr}
;;;360    {
;;;361        MeterMBCmd = MDBS_METER_OTHER ;
000002  201a              MOVS     r0,#0x1a
000004  4912              LDR      r1,|L17.80|
000006  7008              STRB     r0,[r1,#0]
;;;362        MeterTxBuffer[1]=0x16;          // Function 
000008  2016              MOVS     r0,#0x16
00000a  4912              LDR      r1,|L17.84|
00000c  7048              STRB     r0,[r1,#1]
;;;363        MeterTxBuffer[2]=0x08;          // Data 0
00000e  2008              MOVS     r0,#8
000010  7088              STRB     r0,[r1,#2]
;;;364        MeterTxBuffer[3]=0x08;          // Data 1
000012  70c8              STRB     r0,[r1,#3]
;;;365        MeterTxBuffer[4]=0x00;          // Data 2
000014  2000              MOVS     r0,#0
000016  7108              STRB     r0,[r1,#4]
;;;366        MeterTxBuffer[5]=0x02;          // Data 3          
000018  2002              MOVS     r0,#2
00001a  7148              STRB     r0,[r1,#5]
;;;367        MeterTxBuffer[6]=0x04;          // Data 3 			
00001c  2004              MOVS     r0,#4
00001e  7188              STRB     r0,[r1,#6]
;;;368        MeterTxBuffer[7]=0x1D;          // Data 3 
000020  201d              MOVS     r0,#0x1d
000022  71c8              STRB     r0,[r1,#7]
;;;369        MeterTxBuffer[8]=0x2C;          // Data 3 
000024  202c              MOVS     r0,#0x2c
000026  7208              STRB     r0,[r1,#8]
;;;370        MeterTxBuffer[9]=0x3B;          // Data 3 
000028  203b              MOVS     r0,#0x3b
00002a  7248              STRB     r0,[r1,#9]
;;;371        MeterTxBuffer[10]=0x4A;          // Data 3 		
00002c  204a              MOVS     r0,#0x4a
00002e  7288              STRB     r0,[r1,#0xa]
;;;372        CRC16(MeterTxBuffer,11);
000030  210b              MOVS     r1,#0xb
000032  4808              LDR      r0,|L17.84|
000034  f7fffffe          BL       CRC16
;;;373        MeterTxBuffer[11]=uchCRCHi;      // // CRC Checksum 
000038  4807              LDR      r0,|L17.88|
00003a  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00003c  4905              LDR      r1,|L17.84|
00003e  72c8              STRB     r0,[r1,#0xb]
;;;374        MeterTxBuffer[12]=uchCRCLo;      // // CRC Checksum 
000040  4806              LDR      r0,|L17.92|
000042  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000044  7308              STRB     r0,[r1,#0xc]
;;;375        _SendStringToMETER(MeterTxBuffer,13);
000046  210d              MOVS     r1,#0xd
000048  4802              LDR      r0,|L17.84|
00004a  f7fffffe          BL       _SendStringToMETER
;;;376    }
00004e  bd10              POP      {r4,pc}
;;;377    void BAW2A_AddBalance(void)
                          ENDP

                  |L17.80|
                          DCD      MeterMBCmd
                  |L17.84|
                          DCD      MeterTxBuffer
                  |L17.88|
                          DCD      uchCRCHi
                  |L17.92|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_SetPayMode||, CODE, READONLY, ALIGN=2

                  BAW2A_SetPayMode PROC
;;;489    }
;;;490    void BAW2A_SetPayMode(void)
000000  b510              PUSH     {r4,lr}
;;;491    {
;;;492        MeterMBCmd = MDBS_METER_OTHER ;
000002  201a              MOVS     r0,#0x1a
000004  4911              LDR      r1,|L18.76|
000006  7008              STRB     r0,[r1,#0]
;;;493        MeterTxBuffer[1]=0x10;          // Function 
000008  2010              MOVS     r0,#0x10
00000a  4911              LDR      r1,|L18.80|
00000c  7048              STRB     r0,[r1,#1]
;;;494        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;495        MeterTxBuffer[3]=0xE0;          // Data 1
000012  20e0              MOVS     r0,#0xe0
000014  70c8              STRB     r0,[r1,#3]
;;;496        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;497        MeterTxBuffer[5]=0x01;          // Data 3 
00001a  2001              MOVS     r0,#1
00001c  7148              STRB     r0,[r1,#5]
;;;498        MeterTxBuffer[6]=0x02;          // Data 3 
00001e  2002              MOVS     r0,#2
000020  7188              STRB     r0,[r1,#6]
;;;499        MeterTxBuffer[7]=0x00;          // Data 3 
000022  2000              MOVS     r0,#0
000024  71c8              STRB     r0,[r1,#7]
;;;500        MeterTxBuffer[8]=PayMode;          // Data 3 
000026  480b              LDR      r0,|L18.84|
000028  7800              LDRB     r0,[r0,#0]  ; PayMode
00002a  7208              STRB     r0,[r1,#8]
;;;501        CRC16(MeterTxBuffer,9);
00002c  2109              MOVS     r1,#9
00002e  4808              LDR      r0,|L18.80|
000030  f7fffffe          BL       CRC16
;;;502        MeterTxBuffer[9]=uchCRCHi;      // // CRC Checksum 
000034  4808              LDR      r0,|L18.88|
000036  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000038  4905              LDR      r1,|L18.80|
00003a  7248              STRB     r0,[r1,#9]
;;;503        MeterTxBuffer[10]=uchCRCLo;      // // CRC Checksum 
00003c  4807              LDR      r0,|L18.92|
00003e  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000040  7288              STRB     r0,[r1,#0xa]
;;;504        _SendStringToMETER(MeterTxBuffer,11);
000042  210b              MOVS     r1,#0xb
000044  4802              LDR      r0,|L18.80|
000046  f7fffffe          BL       _SendStringToMETER
;;;505    }
00004a  bd10              POP      {r4,pc}
;;;506    void BAW2A_SetPowerOn(void)
                          ENDP

                  |L18.76|
                          DCD      MeterMBCmd
                  |L18.80|
                          DCD      MeterTxBuffer
                  |L18.84|
                          DCD      PayMode
                  |L18.88|
                          DCD      uchCRCHi
                  |L18.92|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_SetPowerOn||, CODE, READONLY, ALIGN=2

                  BAW2A_SetPowerOn PROC
;;;505    }
;;;506    void BAW2A_SetPowerOn(void)
000000  b510              PUSH     {r4,lr}
;;;507    {
;;;508        MeterMBCmd = MDBS_METER_OTHER ;
000002  201a              MOVS     r0,#0x1a
000004  4911              LDR      r1,|L19.76|
000006  7008              STRB     r0,[r1,#0]
;;;509        MeterTxBuffer[1]=0x10;          // Function 
000008  2010              MOVS     r0,#0x10
00000a  4911              LDR      r1,|L19.80|
00000c  7048              STRB     r0,[r1,#1]
;;;510        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;511        MeterTxBuffer[3]=0xE2;          // Data 1
000012  20e2              MOVS     r0,#0xe2
000014  70c8              STRB     r0,[r1,#3]
;;;512        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;513        MeterTxBuffer[5]=0x01;          // Data 3    
00001a  2001              MOVS     r0,#1
00001c  7148              STRB     r0,[r1,#5]
;;;514        MeterTxBuffer[6]=0x02;          // Data 3 
00001e  2002              MOVS     r0,#2
000020  7188              STRB     r0,[r1,#6]
;;;515        MeterTxBuffer[7]=0x00;          // Data 3 
000022  2000              MOVS     r0,#0
000024  71c8              STRB     r0,[r1,#7]
;;;516        MeterTxBuffer[8]=PayMode;          // 扣款模式
000026  480b              LDR      r0,|L19.84|
000028  7800              LDRB     r0,[r0,#0]  ; PayMode
00002a  7208              STRB     r0,[r1,#8]
;;;517        CRC16(MeterTxBuffer,9);
00002c  2109              MOVS     r1,#9
00002e  4808              LDR      r0,|L19.80|
000030  f7fffffe          BL       CRC16
;;;518        MeterTxBuffer[9]=uchCRCHi;      // // CRC Checksum 
000034  4808              LDR      r0,|L19.88|
000036  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000038  4905              LDR      r1,|L19.80|
00003a  7248              STRB     r0,[r1,#9]
;;;519        MeterTxBuffer[10]=uchCRCLo;      // // CRC Checksum 
00003c  4807              LDR      r0,|L19.92|
00003e  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000040  7288              STRB     r0,[r1,#0xa]
;;;520        _SendStringToMETER(MeterTxBuffer,11);   
000042  210b              MOVS     r1,#0xb
000044  4802              LDR      r0,|L19.80|
000046  f7fffffe          BL       _SendStringToMETER
;;;521    }
00004a  bd10              POP      {r4,pc}
;;;522    
                          ENDP

                  |L19.76|
                          DCD      MeterMBCmd
                  |L19.80|
                          DCD      MeterTxBuffer
                  |L19.84|
                          DCD      PayMode
                  |L19.88|
                          DCD      uchCRCHi
                  |L19.92|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_SetRelay||, CODE, READONLY, ALIGN=2

                  BAW2A_SetRelay PROC
;;;305    
;;;306    void BAW2A_SetRelay(void)
000000  b510              PUSH     {r4,lr}
;;;307    {
;;;308        MeterMBCmd = MDBS_METER_OTHER ;
000002  201a              MOVS     r0,#0x1a
000004  4915              LDR      r1,|L20.92|
000006  7008              STRB     r0,[r1,#0]
;;;309        MeterTxBuffer[1]=0x10;          // Function 
000008  2010              MOVS     r0,#0x10
00000a  4915              LDR      r1,|L20.96|
00000c  7048              STRB     r0,[r1,#1]
;;;310        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;311        MeterTxBuffer[3]=0xD2;          // Data 1
000012  20d2              MOVS     r0,#0xd2
000014  70c8              STRB     r0,[r1,#3]
;;;312        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;313        MeterTxBuffer[5]=0x01;          // Data 3 
00001a  2001              MOVS     r0,#1
00001c  7148              STRB     r0,[r1,#5]
;;;314        MeterTxBuffer[6]=0x02;          // Data 3 
00001e  2002              MOVS     r0,#2
000020  7188              STRB     r0,[r1,#6]
;;;315        MeterTxBuffer[7]=0x00;          // Data 3 
000022  2000              MOVS     r0,#0
000024  71c8              STRB     r0,[r1,#7]
;;;316        if ( RelayOnOff )
000026  480f              LDR      r0,|L20.100|
000028  7800              LDRB     r0,[r0,#0]  ; RelayOnOff
00002a  2800              CMP      r0,#0
00002c  d002              BEQ      |L20.52|
;;;317        {
;;;318        MeterTxBuffer[8]=0x01;          // Data 3 
00002e  2001              MOVS     r0,#1
000030  7208              STRB     r0,[r1,#8]
000032  e002              B        |L20.58|
                  |L20.52|
;;;319        } else {
;;;320        MeterTxBuffer[8]=0x02;          // Data 3 
000034  2002              MOVS     r0,#2
000036  490a              LDR      r1,|L20.96|
000038  7208              STRB     r0,[r1,#8]
                  |L20.58|
;;;321        }
;;;322        CRC16(MeterTxBuffer,9);
00003a  2109              MOVS     r1,#9
00003c  4808              LDR      r0,|L20.96|
00003e  f7fffffe          BL       CRC16
;;;323        MeterTxBuffer[9]=uchCRCHi;      // // CRC Checksum 
000042  4809              LDR      r0,|L20.104|
000044  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000046  4906              LDR      r1,|L20.96|
000048  7248              STRB     r0,[r1,#9]
;;;324        MeterTxBuffer[10]=uchCRCLo;      // // CRC Checksum 
00004a  4808              LDR      r0,|L20.108|
00004c  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
00004e  7288              STRB     r0,[r1,#0xa]
;;;325        _SendStringToMETER(MeterTxBuffer,11);   
000050  210b              MOVS     r1,#0xb
000052  4803              LDR      r0,|L20.96|
000054  f7fffffe          BL       _SendStringToMETER
;;;326    }
000058  bd10              POP      {r4,pc}
;;;327    void BAW2A_SetAddr(void)
                          ENDP

00005a  0000              DCW      0x0000
                  |L20.92|
                          DCD      MeterMBCmd
                  |L20.96|
                          DCD      MeterTxBuffer
                  |L20.100|
                          DCD      RelayOnOff
                  |L20.104|
                          DCD      uchCRCHi
                  |L20.108|
                          DCD      uchCRCLo

                          AREA ||i.BAW2A_SetTime||, CODE, READONLY, ALIGN=2

                  BAW2A_SetTime PROC
;;;522    
;;;523    void BAW2A_SetTime(void)
000000  b510              PUSH     {r4,lr}
;;;524    {
;;;525        MeterMBCmd = MDBS_METER_OTHER ;
000002  201a              MOVS     r0,#0x1a
000004  491a              LDR      r1,|L21.112|
000006  7008              STRB     r0,[r1,#0]
;;;526        MeterTxBuffer[1]=0x10;          // Function 
000008  2010              MOVS     r0,#0x10
00000a  491a              LDR      r1,|L21.116|
00000c  7048              STRB     r0,[r1,#1]
;;;527        MeterTxBuffer[2]=0x00;          // Data 0
00000e  2000              MOVS     r0,#0
000010  7088              STRB     r0,[r1,#2]
;;;528        MeterTxBuffer[3]=0x12;          // Data 1
000012  2012              MOVS     r0,#0x12
000014  70c8              STRB     r0,[r1,#3]
;;;529        MeterTxBuffer[4]=0x00;          // Data 2
000016  2000              MOVS     r0,#0
000018  7108              STRB     r0,[r1,#4]
;;;530        MeterTxBuffer[5]=0x04;          // Data 3    
00001a  2004              MOVS     r0,#4
00001c  7148              STRB     r0,[r1,#5]
;;;531        MeterTxBuffer[6]=0x08;          // Data 3 
00001e  2008              MOVS     r0,#8
000020  7188              STRB     r0,[r1,#6]
;;;532    
;;;533        MeterTxBuffer[7]=0x00;          // Data 3 
000022  2000              MOVS     r0,#0
000024  71c8              STRB     r0,[r1,#7]
;;;534        MeterTxBuffer[8]=u8Year;          // 扣款模式
000026  4814              LDR      r0,|L21.120|
000028  7800              LDRB     r0,[r0,#0]  ; u8Year
00002a  7208              STRB     r0,[r1,#8]
;;;535        MeterTxBuffer[9]=u8Month;          // Data 3 
00002c  4813              LDR      r0,|L21.124|
00002e  7800              LDRB     r0,[r0,#0]  ; u8Month
000030  7248              STRB     r0,[r1,#9]
;;;536        MeterTxBuffer[10]=u8Day;          // 扣款模式
000032  4813              LDR      r0,|L21.128|
000034  7800              LDRB     r0,[r0,#0]  ; u8Day
000036  7288              STRB     r0,[r1,#0xa]
;;;537        MeterTxBuffer[11]=u8Hour;          // Data 3 
000038  4812              LDR      r0,|L21.132|
00003a  7800              LDRB     r0,[r0,#0]  ; u8Hour
00003c  72c8              STRB     r0,[r1,#0xb]
;;;538        MeterTxBuffer[12]=u8Min;          // 扣款模式
00003e  4812              LDR      r0,|L21.136|
000040  7800              LDRB     r0,[r0,#0]  ; u8Min
000042  7308              STRB     r0,[r1,#0xc]
;;;539        MeterTxBuffer[13]=u8Sec;          // Data 3 
000044  4811              LDR      r0,|L21.140|
000046  7800              LDRB     r0,[r0,#0]  ; u8Sec
000048  7348              STRB     r0,[r1,#0xd]
;;;540        MeterTxBuffer[14]=u8Week;          // 扣款模式
00004a  4811              LDR      r0,|L21.144|
00004c  7800              LDRB     r0,[r0,#0]  ; u8Week
00004e  7388              STRB     r0,[r1,#0xe]
;;;541        CRC16(MeterTxBuffer,15);
000050  210f              MOVS     r1,#0xf
000052  4808              LDR      r0,|L21.116|
000054  f7fffffe          BL       CRC16
;;;542        MeterTxBuffer[16]=uchCRCHi;      // // CRC Checksum 
000058  480e              LDR      r0,|L21.148|
00005a  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00005c  4905              LDR      r1,|L21.116|
00005e  7408              STRB     r0,[r1,#0x10]
;;;543        MeterTxBuffer[17]=uchCRCLo;      // // CRC Checksum 
000060  480d              LDR      r0,|L21.152|
000062  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000064  7448              STRB     r0,[r1,#0x11]
;;;544        _SendStringToMETER(MeterTxBuffer,18);   
000066  2112              MOVS     r1,#0x12
000068  4802              LDR      r0,|L21.116|
00006a  f7fffffe          BL       _SendStringToMETER
;;;545    }
00006e  bd10              POP      {r4,pc}
;;;546    
                          ENDP

                  |L21.112|
                          DCD      MeterMBCmd
                  |L21.116|
                          DCD      MeterTxBuffer
                  |L21.120|
                          DCD      u8Year
                  |L21.124|
                          DCD      u8Month
                  |L21.128|
                          DCD      u8Day
                  |L21.132|
                          DCD      u8Hour
                  |L21.136|
                          DCD      u8Min
                  |L21.140|
                          DCD      u8Sec
                  |L21.144|
                          DCD      u8Week
                  |L21.148|
                          DCD      uchCRCHi
                  |L21.152|
                          DCD      uchCRCLo

                          AREA ||i.CRC16||, CODE, READONLY, ALIGN=2

                  CRC16 PROC
;;;739    
;;;740    void CRC16(uint8_t *puchMsg, uint16_t usDataLen)
000000  b510              PUSH     {r4,lr}
;;;741    {    
000002  460a              MOV      r2,r1
;;;742        unsigned uIndex ; /* will index into CRC lookup table */
;;;743        uchCRCHi = 0xFF;  /* high byte of CRC initialized */
000004  23ff              MOVS     r3,#0xff
000006  4c0d              LDR      r4,|L22.60|
000008  7023              STRB     r3,[r4,#0]
;;;744        uchCRCLo = 0xFF;  /* low byte of CRC initialized */
00000a  4c0d              LDR      r4,|L22.64|
00000c  7023              STRB     r3,[r4,#0]
;;;745        while (usDataLen--) /* pass through message buffer */
00000e  e00f              B        |L22.48|
                  |L22.16|
;;;746        {
;;;747            uIndex = uchCRCHi ^ *puchMsg++ ; /* calculate the CRC */
000010  7801              LDRB     r1,[r0,#0]
000012  1c40              ADDS     r0,r0,#1
000014  4c09              LDR      r4,|L22.60|
000016  7824              LDRB     r4,[r4,#0]  ; uchCRCHi
000018  4061              EORS     r1,r1,r4
;;;748            uchCRCHi = uchCRCLo ^ auchCRCHi[uIndex] ;
00001a  4b0a              LDR      r3,|L22.68|
00001c  5c5b              LDRB     r3,[r3,r1]
00001e  4c08              LDR      r4,|L22.64|
000020  7824              LDRB     r4,[r4,#0]  ; uchCRCLo
000022  4063              EORS     r3,r3,r4
000024  4c05              LDR      r4,|L22.60|
000026  7023              STRB     r3,[r4,#0]
;;;749            uchCRCLo = auchCRCLo[uIndex] ;
000028  4b07              LDR      r3,|L22.72|
00002a  5c5b              LDRB     r3,[r3,r1]
00002c  4c04              LDR      r4,|L22.64|
00002e  7023              STRB     r3,[r4,#0]
                  |L22.48|
000030  4613              MOV      r3,r2                 ;745
000032  1e54              SUBS     r4,r2,#1              ;745
000034  b2a2              UXTH     r2,r4                 ;745
000036  2b00              CMP      r3,#0                 ;745
000038  d1ea              BNE      |L22.16|
;;;750        }
;;;751    
;;;752        //return ( ((uchCRCHi << 8) | uchCRCLo) ) ;
;;;753    }
00003a  bd10              POP      {r4,pc}
;;;754    
                          ENDP

                  |L22.60|
                          DCD      uchCRCHi
                  |L22.64|
                          DCD      uchCRCLo
                  |L22.68|
                          DCD      auchCRCHi
                  |L22.72|
                          DCD      auchCRCLo

                          AREA ||i.CmdModBus_BAW2A||, CODE, READONLY, ALIGN=2

                  CmdModBus_BAW2A PROC
;;;587    //巧力預付型電表 
;;;588    void CmdModBus_BAW2A(uint8_t ModBusCommand)
000000  b510              PUSH     {r4,lr}
;;;589    {
000002  4604              MOV      r4,r0
;;;590    	// 010300000003	
;;;591    	switch ( ModBusCommand )
000004  0023              MOVS     r3,r4
000006  f7fffffe          BL       __ARM_common_switch8
00000a  190e              DCB      0x19,0x0e
00000c  121b1e21          DCB      0x12,0x1b,0x1e,0x21
000010  15515124          DCB      0x15,0x51,0x51,0x24
000014  512a2718          DCB      0x51,0x2a,0x27,0x18
000018  2d303336          DCB      0x2d,0x30,0x33,0x36
00001c  393c484b          DCB      0x39,0x3c,0x48,0x4b
000020  4e423f45          DCB      0x4e,0x42,0x3f,0x45
000024  5100              DCB      0x51,0x00
;;;592    	{		
;;;593    		case MDBS_READY :
;;;594    			ModBusStep = 0 ;			
000026  2000              MOVS     r0,#0
000028  4923              LDR      r1,|L23.184|
00002a  7008              STRB     r0,[r1,#0]
;;;595    			break;
00002c  e042              B        |L23.180|
;;;596    		case MDBS_METER_GET_WATT :
;;;597    			BAW2A_GetWatt();
00002e  f7fffffe          BL       BAW2A_GetWatt
;;;598    			break;
000032  e03f              B        |L23.180|
;;;599    		case MDBS_METER_GET_RELAY :
;;;600    			BAW2A_GetRelayStatus();	
000034  f7fffffe          BL       BAW2A_GetRelayStatus
;;;601    			break;
000038  e03c              B        |L23.180|
;;;602    		case MDBS_METER_GET_BAL :
;;;603    			BAW2A_GetBalance();
00003a  f7fffffe          BL       BAW2A_GetBalance
;;;604    			break;
00003e  e039              B        |L23.180|
;;;605    		case MDBS_METER_SET_RELAY : 			
;;;606    			BAW2A_SetRelay();
000040  f7fffffe          BL       BAW2A_SetRelay
;;;607    			break;
000044  e036              B        |L23.180|
;;;608    		case MDBS_METER_SET_ADDR : 
;;;609    			BAW2A_SetAddr();
000046  f7fffffe          BL       BAW2A_SetAddr
;;;610    			break;
00004a  e033              B        |L23.180|
;;;611    		case MDBS_METER_SET_BAUDRATE : 
;;;612    			 BAW2A_SetBuadrate();
00004c  f7fffffe          BL       BAW2A_SetBuadrate
;;;613    			break;
000050  e030              B        |L23.180|
;;;614    		case MDBS_METER_SET_PWD :
;;;615    			BAW2A_SetPassword();
000052  f7fffffe          BL       BAW2A_SetPassword
;;;616    			break;
000056  e02d              B        |L23.180|
;;;617    		case MDBS_METER_ADD_VALUE :
;;;618    			BAW2A_AddBalance();
000058  f7fffffe          BL       BAW2A_AddBalance
;;;619    			break;
00005c  e02a              B        |L23.180|
;;;620    		case MDBS_METER_EXIT_TEST : 
;;;621    			BAW2A_ExitTestMode();
00005e  f7fffffe          BL       BAW2A_ExitTestMode
;;;622    			break;
000062  e027              B        |L23.180|
;;;623    		case MDBS_METER_GET_V : 
;;;624    			BAW2A_Get_V();  			
000064  f7fffffe          BL       BAW2A_Get_V
;;;625    			break;
000068  e024              B        |L23.180|
;;;626    		case MDBS_METER_GET_I : 
;;;627    			BAW2A_Get_I();  			
00006a  f7fffffe          BL       BAW2A_Get_I
;;;628    			break;
00006e  e021              B        |L23.180|
;;;629    		case MDBS_METER_GET_F : 
;;;630    			BAW2A_Get_F();	
000070  f7fffffe          BL       BAW2A_Get_F
;;;631    			break;
000074  e01e              B        |L23.180|
;;;632    		case MDBS_METER_GET_P: 
;;;633    			BAW2A_Get_P();   			
000076  f7fffffe          BL       BAW2A_Get_P
;;;634    			break;		
00007a  e01b              B        |L23.180|
;;;635    		case MDBS_METER_GET_S: 
;;;636    			BAW2A_Get_S();
00007c  f7fffffe          BL       BAW2A_Get_S
;;;637    			break;
000080  e018              B        |L23.180|
;;;638    		case MDBS_METER_GET_PF: 
;;;639    			BAW2A_Get_PF();		
000082  f7fffffe          BL       BAW2A_Get_PF
;;;640    			break;
000086  e015              B        |L23.180|
;;;641    		case MDBS_METER_SET_MODE : 			
;;;642    			BAW2A_SetPayMode();			   
000088  f7fffffe          BL       BAW2A_SetPayMode
;;;643    			break;
00008c  e012              B        |L23.180|
;;;644    		case MDBS_METER_SET_POWER_ON: 
;;;645    			BAW2A_SetPowerOn();   
00008e  f7fffffe          BL       BAW2A_SetPowerOn
;;;646    			break;
000092  e00f              B        |L23.180|
;;;647    		case MDBS_METER_SET_TIME: 
;;;648    			BAW2A_SetTime();
000094  f7fffffe          BL       BAW2A_SetTime
;;;649    			break;
000098  e00c              B        |L23.180|
;;;650    		case MDBS_METER_GET_MODE: 
;;;651    			BAW2A_GetPayMode();
00009a  f7fffffe          BL       BAW2A_GetPayMode
;;;652    			break;
00009e  e009              B        |L23.180|
;;;653    		case MDBS_METER_GET_STATUS: 
;;;654    			BAW2A_GetStatus();			
0000a0  f7fffffe          BL       BAW2A_GetStatus
;;;655    			break;
0000a4  e006              B        |L23.180|
;;;656    		case MDBS_METER_GET_CARD_ID: 
;;;657    			BAW2A_GetCardID();		
0000a6  f7fffffe          BL       BAW2A_GetCardID
;;;658    			break;            
0000aa  e003              B        |L23.180|
;;;659    		default :
;;;660    			MeterMBCmd = MDBS_METER_OTHER ;
0000ac  201a              MOVS     r0,#0x1a
0000ae  4903              LDR      r1,|L23.188|
0000b0  7008              STRB     r0,[r1,#0]
;;;661    			break;
0000b2  bf00              NOP      
                  |L23.180|
0000b4  bf00              NOP                            ;595
;;;662    	}
;;;663    }
0000b6  bd10              POP      {r4,pc}
;;;664    
                          ENDP

                  |L23.184|
                          DCD      ModBusStep
                  |L23.188|
                          DCD      MeterMBCmd

                          AREA ||i.CmdModBus_DEM5x0||, CODE, READONLY, ALIGN=2

                  CmdModBus_DEM5x0 PROC
;;;158    // DAE DEM530 / DEM540
;;;159    void CmdModBus_DEM5x0(uint8_t ModBusCommand)
000000  b510              PUSH     {r4,lr}
;;;160    {
000002  4604              MOV      r4,r0
;;;161    	// 010300000003
;;;162    	switch ( ModBusCommand )
000004  0023              MOVS     r3,r4
000006  f7fffffe          BL       __ARM_common_switch8
00000a  0a06              DCB      0x0a,0x06
00000c  0a49668b          DCB      0x0a,0x49,0x66,0x8b
000010  28e5e5a9          DCB      0x28,0xe5,0xe5,0xa9
000014  c7e5              DCB      0xc7,0xe5
;;;163    	{		
;;;164    		case MDBS_READY :
;;;165    			ModBusStep = 0 ;
000016  2000              MOVS     r0,#0
000018  4971              LDR      r1,|L24.480|
00001a  7008              STRB     r0,[r1,#0]
;;;166    			break;
00001c  e0de              B        |L24.476|
;;;167    		case MDBS_METER_GET_WATT :
;;;168    			MeterMBCmd = MDBS_METER_GET_WATT ;
00001e  2001              MOVS     r0,#1
000020  4970              LDR      r1,|L24.484|
000022  7008              STRB     r0,[r1,#0]
;;;169    			bReadPowerMeterValue = 1 ;						
000024  4970              LDR      r1,|L24.488|
000026  7008              STRB     r0,[r1,#0]
;;;170    			MeterTxBuffer[1]=0x03;          // Function 
000028  2003              MOVS     r0,#3
00002a  4970              LDR      r1,|L24.492|
00002c  7048              STRB     r0,[r1,#1]
;;;171    			MeterTxBuffer[2]=0x00;          // Data 0
00002e  2000              MOVS     r0,#0
000030  7088              STRB     r0,[r1,#2]
;;;172    			MeterTxBuffer[3]=0x00;          // Data 1
000032  70c8              STRB     r0,[r1,#3]
;;;173    			MeterTxBuffer[4]=0x00;          // Data 2
000034  7108              STRB     r0,[r1,#4]
;;;174    			MeterTxBuffer[5]=0x02;          // Data 3
000036  2002              MOVS     r0,#2
000038  7148              STRB     r0,[r1,#5]
;;;175    			CRC16(MeterTxBuffer,6);
00003a  2106              MOVS     r1,#6
00003c  486b              LDR      r0,|L24.492|
00003e  f7fffffe          BL       CRC16
;;;176    			MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000042  486b              LDR      r0,|L24.496|
000044  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000046  4969              LDR      r1,|L24.492|
000048  7188              STRB     r0,[r1,#6]
;;;177    			MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
00004a  486a              LDR      r0,|L24.500|
00004c  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
00004e  71c8              STRB     r0,[r1,#7]
;;;178    			_SendStringToMETER(MeterTxBuffer,8);   			
000050  2108              MOVS     r1,#8
000052  4866              LDR      r0,|L24.492|
000054  f7fffffe          BL       _SendStringToMETER
;;;179    			break;
000058  e0c0              B        |L24.476|
;;;180    		case MDBS_METER_GET_RELAY :
;;;181    			MeterMBCmd = MDBS_METER_GET_RELAY ;
00005a  2005              MOVS     r0,#5
00005c  4961              LDR      r1,|L24.484|
00005e  7008              STRB     r0,[r1,#0]
;;;182    			bReadPowerMeterValue = 1 ;			
000060  2001              MOVS     r0,#1
000062  4961              LDR      r1,|L24.488|
000064  7008              STRB     r0,[r1,#0]
;;;183    			MeterTxBuffer[1]=0x03;          // Function 
000066  2003              MOVS     r0,#3
000068  4960              LDR      r1,|L24.492|
00006a  7048              STRB     r0,[r1,#1]
;;;184    			MeterTxBuffer[2]=0x00;          // Data 0
00006c  2000              MOVS     r0,#0
00006e  7088              STRB     r0,[r1,#2]
;;;185    			MeterTxBuffer[3]=0x02;          // Data 1
000070  2002              MOVS     r0,#2
000072  70c8              STRB     r0,[r1,#3]
;;;186    			MeterTxBuffer[4]=0x00;          // Data 2
000074  2000              MOVS     r0,#0
000076  7108              STRB     r0,[r1,#4]
;;;187    			MeterTxBuffer[5]=0x01;          // Data 3
000078  2001              MOVS     r0,#1
00007a  7148              STRB     r0,[r1,#5]
;;;188    			CRC16(MeterTxBuffer,6);
00007c  2106              MOVS     r1,#6
00007e  485b              LDR      r0,|L24.492|
000080  f7fffffe          BL       CRC16
;;;189    			MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000084  485a              LDR      r0,|L24.496|
000086  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000088  4958              LDR      r1,|L24.492|
00008a  7188              STRB     r0,[r1,#6]
;;;190    			MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
00008c  4859              LDR      r0,|L24.500|
00008e  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000090  71c8              STRB     r0,[r1,#7]
;;;191    			_SendStringToMETER(MeterTxBuffer,8);   					
000092  2108              MOVS     r1,#8
000094  4855              LDR      r0,|L24.492|
000096  f7fffffe          BL       _SendStringToMETER
;;;192    			break;
00009a  e09f              B        |L24.476|
;;;193    		case MDBS_METER_SET_RELAY : 
;;;194    			MeterMBCmd = MDBS_METER_OTHER ;
00009c  201a              MOVS     r0,#0x1a
00009e  4951              LDR      r1,|L24.484|
0000a0  7008              STRB     r0,[r1,#0]
;;;195    			MeterTxBuffer[1]=0x05;          // Function 
0000a2  2005              MOVS     r0,#5
0000a4  4951              LDR      r1,|L24.492|
0000a6  7048              STRB     r0,[r1,#1]
;;;196    			MeterTxBuffer[2]=0x00;          // Data 0
0000a8  2000              MOVS     r0,#0
0000aa  7088              STRB     r0,[r1,#2]
;;;197    			MeterTxBuffer[3]=0x30;          // Data 1
0000ac  2030              MOVS     r0,#0x30
0000ae  70c8              STRB     r0,[r1,#3]
;;;198    			MeterTxBuffer[4]=0x00;          // Data 2
0000b0  2000              MOVS     r0,#0
0000b2  7108              STRB     r0,[r1,#4]
;;;199    			MeterTxBuffer[5]=0x00;          // Data 3      
0000b4  7148              STRB     r0,[r1,#5]
;;;200    			CRC16(MeterTxBuffer,6);
0000b6  2106              MOVS     r1,#6
0000b8  484c              LDR      r0,|L24.492|
0000ba  f7fffffe          BL       CRC16
;;;201    			MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
0000be  484c              LDR      r0,|L24.496|
0000c0  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
0000c2  494a              LDR      r1,|L24.492|
0000c4  7188              STRB     r0,[r1,#6]
;;;202    			MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
0000c6  484b              LDR      r0,|L24.500|
0000c8  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
0000ca  71c8              STRB     r0,[r1,#7]
;;;203    			_SendStringToMETER(MeterTxBuffer,8);   
0000cc  2108              MOVS     r1,#8
0000ce  4847              LDR      r0,|L24.492|
0000d0  f7fffffe          BL       _SendStringToMETER
;;;204    			break;		
0000d4  e082              B        |L24.476|
;;;205    		case MDBS_METER_SET_ADDR : 
;;;206    			MeterMBCmd = MDBS_METER_OTHER ;
0000d6  201a              MOVS     r0,#0x1a
0000d8  4942              LDR      r1,|L24.484|
0000da  7008              STRB     r0,[r1,#0]
;;;207    			MeterTxBuffer[1]=0x10;          // Function 
0000dc  2010              MOVS     r0,#0x10
0000de  4943              LDR      r1,|L24.492|
0000e0  7048              STRB     r0,[r1,#1]
;;;208    			MeterTxBuffer[2]=0x00;          // Data 0
0000e2  2000              MOVS     r0,#0
0000e4  7088              STRB     r0,[r1,#2]
;;;209    			MeterTxBuffer[3]=0x30;          // Data 1
0000e6  2030              MOVS     r0,#0x30
0000e8  70c8              STRB     r0,[r1,#3]
;;;210    			MeterTxBuffer[4]=0x00;          // Data 2
0000ea  2000              MOVS     r0,#0
0000ec  7108              STRB     r0,[r1,#4]
;;;211    			MeterTxBuffer[5]=0x01;          // Data 3 
0000ee  2001              MOVS     r0,#1
0000f0  7148              STRB     r0,[r1,#5]
;;;212    			MeterTxBuffer[6]=0x02;          // Data 3 
0000f2  2002              MOVS     r0,#2
0000f4  7188              STRB     r0,[r1,#6]
;;;213    			MeterTxBuffer[7]=PowerMeterNewAddr;          // Data 3 
0000f6  4840              LDR      r0,|L24.504|
0000f8  7800              LDRB     r0,[r0,#0]  ; PowerMeterNewAddr
0000fa  71c8              STRB     r0,[r1,#7]
;;;214    			MeterTxBuffer[8]=0x00;          // Data 3 
0000fc  2000              MOVS     r0,#0
0000fe  7208              STRB     r0,[r1,#8]
;;;215    			CRC16(MeterTxBuffer,9);
000100  2109              MOVS     r1,#9
000102  483a              LDR      r0,|L24.492|
000104  f7fffffe          BL       CRC16
;;;216    			MeterTxBuffer[9]=uchCRCHi;      // // CRC Checksum 
000108  4839              LDR      r0,|L24.496|
00010a  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00010c  4937              LDR      r1,|L24.492|
00010e  7248              STRB     r0,[r1,#9]
;;;217    			MeterTxBuffer[10]=uchCRCLo;      // // CRC Checksum 
000110  4838              LDR      r0,|L24.500|
000112  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000114  7288              STRB     r0,[r1,#0xa]
;;;218    			_SendStringToMETER(MeterTxBuffer,11);   
000116  210b              MOVS     r1,#0xb
000118  4834              LDR      r0,|L24.492|
00011a  f7fffffe          BL       _SendStringToMETER
;;;219    			break;
00011e  e05d              B        |L24.476|
;;;220    		case MDBS_METER_SET_BAUDRATE : 
;;;221    			MeterMBCmd = MDBS_METER_OTHER ;
000120  201a              MOVS     r0,#0x1a
000122  4930              LDR      r1,|L24.484|
000124  7008              STRB     r0,[r1,#0]
;;;222    			MeterTxBuffer[1]=0x05;          // Function 
000126  2005              MOVS     r0,#5
000128  4930              LDR      r1,|L24.492|
00012a  7048              STRB     r0,[r1,#1]
;;;223    			MeterTxBuffer[2]=0x00;          // Data 0
00012c  2000              MOVS     r0,#0
00012e  7088              STRB     r0,[r1,#2]
;;;224    			MeterTxBuffer[3]=0x30;          // Data 1
000130  2030              MOVS     r0,#0x30
000132  70c8              STRB     r0,[r1,#3]
;;;225    			MeterTxBuffer[4]=0xFF;          // Data 2
000134  20ff              MOVS     r0,#0xff
000136  7108              STRB     r0,[r1,#4]
;;;226    			MeterTxBuffer[5]=0x00;          // Data 3            
000138  2000              MOVS     r0,#0
00013a  7148              STRB     r0,[r1,#5]
;;;227    			CRC16(MeterTxBuffer,6);
00013c  2106              MOVS     r1,#6
00013e  482b              LDR      r0,|L24.492|
000140  f7fffffe          BL       CRC16
;;;228    			MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000144  482a              LDR      r0,|L24.496|
000146  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000148  4928              LDR      r1,|L24.492|
00014a  7188              STRB     r0,[r1,#6]
;;;229    			MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
00014c  4829              LDR      r0,|L24.500|
00014e  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000150  71c8              STRB     r0,[r1,#7]
;;;230    			_SendStringToMETER(MeterTxBuffer,8);   
000152  2108              MOVS     r1,#8
000154  4825              LDR      r0,|L24.492|
000156  f7fffffe          BL       _SendStringToMETER
;;;231    			break;
00015a  e03f              B        |L24.476|
;;;232    		case MDBS_METER_SET_PWD :
;;;233    			MeterMBCmd = MDBS_METER_OTHER ;
00015c  201a              MOVS     r0,#0x1a
00015e  4921              LDR      r1,|L24.484|
000160  7008              STRB     r0,[r1,#0]
;;;234    			MeterTxBuffer[1]=0x05;          // Function 
000162  2005              MOVS     r0,#5
000164  4921              LDR      r1,|L24.492|
000166  7048              STRB     r0,[r1,#1]
;;;235    			MeterTxBuffer[2]=0x00;          // Data 0
000168  2000              MOVS     r0,#0
00016a  7088              STRB     r0,[r1,#2]
;;;236    			MeterTxBuffer[3]=0x30;          // Data 1
00016c  2030              MOVS     r0,#0x30
00016e  70c8              STRB     r0,[r1,#3]
;;;237    			MeterTxBuffer[4]=0xFF;          // Data 2
000170  20ff              MOVS     r0,#0xff
000172  7108              STRB     r0,[r1,#4]
;;;238    			MeterTxBuffer[5]=0x00;          // Data 3            
000174  2000              MOVS     r0,#0
000176  7148              STRB     r0,[r1,#5]
;;;239    			CRC16(MeterTxBuffer,6);
000178  2106              MOVS     r1,#6
00017a  481c              LDR      r0,|L24.492|
00017c  f7fffffe          BL       CRC16
;;;240    			MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000180  481b              LDR      r0,|L24.496|
000182  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000184  4919              LDR      r1,|L24.492|
000186  7188              STRB     r0,[r1,#6]
;;;241    			MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
000188  481a              LDR      r0,|L24.500|
00018a  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
00018c  71c8              STRB     r0,[r1,#7]
;;;242    			_SendStringToMETER(MeterTxBuffer,8);   
00018e  2108              MOVS     r1,#8
000190  4816              LDR      r0,|L24.492|
000192  f7fffffe          BL       _SendStringToMETER
;;;243    			break;
000196  e021              B        |L24.476|
;;;244    		case MDBS_METER_SET_EXIT :
;;;245    			MeterMBCmd = MDBS_METER_OTHER ;
000198  201a              MOVS     r0,#0x1a
00019a  4912              LDR      r1,|L24.484|
00019c  7008              STRB     r0,[r1,#0]
;;;246    			MeterTxBuffer[1]=0x05;          // Function 
00019e  2005              MOVS     r0,#5
0001a0  4912              LDR      r1,|L24.492|
0001a2  7048              STRB     r0,[r1,#1]
;;;247    			MeterTxBuffer[2]=0x00;          // Data 0
0001a4  2000              MOVS     r0,#0
0001a6  7088              STRB     r0,[r1,#2]
;;;248    			MeterTxBuffer[3]=0x30;          // Data 1
0001a8  2030              MOVS     r0,#0x30
0001aa  70c8              STRB     r0,[r1,#3]
;;;249    			MeterTxBuffer[4]=0xFF;          // Data 2
0001ac  20ff              MOVS     r0,#0xff
0001ae  7108              STRB     r0,[r1,#4]
;;;250    			MeterTxBuffer[5]=0x00;          // Data 3            
0001b0  2000              MOVS     r0,#0
0001b2  7148              STRB     r0,[r1,#5]
;;;251    			CRC16(MeterTxBuffer,6);
0001b4  2106              MOVS     r1,#6
0001b6  480d              LDR      r0,|L24.492|
0001b8  f7fffffe          BL       CRC16
;;;252    			MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
0001bc  480c              LDR      r0,|L24.496|
0001be  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
0001c0  490a              LDR      r1,|L24.492|
0001c2  7188              STRB     r0,[r1,#6]
;;;253    			MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
0001c4  480b              LDR      r0,|L24.500|
0001c6  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
0001c8  71c8              STRB     r0,[r1,#7]
;;;254    			_SendStringToMETER(MeterTxBuffer,8);   
0001ca  2108              MOVS     r1,#8
0001cc  4807              LDR      r0,|L24.492|
0001ce  f7fffffe          BL       _SendStringToMETER
;;;255    			break;
0001d2  e003              B        |L24.476|
;;;256    		default :
;;;257    			MeterMBCmd = MDBS_METER_OTHER ;
0001d4  201a              MOVS     r0,#0x1a
0001d6  4903              LDR      r1,|L24.484|
0001d8  7008              STRB     r0,[r1,#0]
;;;258    			break;
0001da  bf00              NOP      
                  |L24.476|
0001dc  bf00              NOP                            ;166
;;;259    	}
;;;260    }
0001de  bd10              POP      {r4,pc}
;;;261    void BAW2A_GetWatt(void)
                          ENDP

                  |L24.480|
                          DCD      ModBusStep
                  |L24.484|
                          DCD      MeterMBCmd
                  |L24.488|
                          DCD      bReadPowerMeterValue
                  |L24.492|
                          DCD      MeterTxBuffer
                  |L24.496|
                          DCD      uchCRCHi
                  |L24.500|
                          DCD      uchCRCLo
                  |L24.504|
                          DCD      PowerMeterNewAddr

                          AREA ||i.CmdModBus_E21nE31||, CODE, READONLY, ALIGN=2

                  CmdModBus_E21nE31 PROC
;;;665    // Tatung E21/E31
;;;666    void CmdModBus_E21nE31(uint8_t ModBusCmd)
000000  b510              PUSH     {r4,lr}
;;;667    {
000002  4604              MOV      r4,r0
;;;668    	// Tatung E21/E31 
;;;669    	switch ( ModBusCmd )
000004  0023              MOVS     r3,r4
000006  f7fffffe          BL       __ARM_common_switch8
00000a  0604              DCB      0x06,0x04
00000c  08486d92          DCB      0x08,0x48,0x6d,0x92
000010  2896              DCB      0x28,0x96
;;;670    	{		
;;;671    		case MDBS_READY :
;;;672    			ModBusStep = 0 ;
000012  2000              MOVS     r0,#0
000014  494b              LDR      r1,|L25.324|
000016  7008              STRB     r0,[r1,#0]
;;;673    			break;
000018  e091              B        |L25.318|
;;;674    		case MDBS_METER_GET_WATT :
;;;675    			MeterMBCmd = MDBS_METER_GET_WATT ;
00001a  2001              MOVS     r0,#1
00001c  494a              LDR      r1,|L25.328|
00001e  7008              STRB     r0,[r1,#0]
;;;676    			bReadPowerMeterValue = 1 ;									
000020  494a              LDR      r1,|L25.332|
000022  7008              STRB     r0,[r1,#0]
;;;677    			MeterTxBuffer[1]=0x03;          // Function 
000024  2003              MOVS     r0,#3
000026  494a              LDR      r1,|L25.336|
000028  7048              STRB     r0,[r1,#1]
;;;678    			MeterTxBuffer[2]=0x01;          // Data 0
00002a  2001              MOVS     r0,#1
00002c  7088              STRB     r0,[r1,#2]
;;;679    			MeterTxBuffer[3]=0x04;          // Data 1
00002e  2004              MOVS     r0,#4
000030  70c8              STRB     r0,[r1,#3]
;;;680    			MeterTxBuffer[4]=0x00;          // Data 2
000032  2000              MOVS     r0,#0
000034  7108              STRB     r0,[r1,#4]
;;;681    			MeterTxBuffer[5]=0x02;          // Data 3
000036  2002              MOVS     r0,#2
000038  7148              STRB     r0,[r1,#5]
;;;682    			CRC16(MeterTxBuffer,6);
00003a  2106              MOVS     r1,#6
00003c  4844              LDR      r0,|L25.336|
00003e  f7fffffe          BL       CRC16
;;;683    			MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000042  4844              LDR      r0,|L25.340|
000044  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000046  4942              LDR      r1,|L25.336|
000048  7188              STRB     r0,[r1,#6]
;;;684    			MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
00004a  4843              LDR      r0,|L25.344|
00004c  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
00004e  71c8              STRB     r0,[r1,#7]
;;;685    			_SendStringToMETER(MeterTxBuffer,8);   						
000050  2108              MOVS     r1,#8
000052  483f              LDR      r0,|L25.336|
000054  f7fffffe          BL       _SendStringToMETER
;;;686    			break;
000058  e071              B        |L25.318|
;;;687    		case MDBS_METER_GET_RELAY :
;;;688    			MeterMBCmd = MDBS_METER_GET_RELAY ;
00005a  2005              MOVS     r0,#5
00005c  493a              LDR      r1,|L25.328|
00005e  7008              STRB     r0,[r1,#0]
;;;689    			bReadPowerMeterValue = 1 ;			
000060  2001              MOVS     r0,#1
000062  493a              LDR      r1,|L25.332|
000064  7008              STRB     r0,[r1,#0]
;;;690    			MeterTxBuffer[1]=0x03;          // Function 
000066  2003              MOVS     r0,#3
000068  4939              LDR      r1,|L25.336|
00006a  7048              STRB     r0,[r1,#1]
;;;691    			MeterTxBuffer[2]=0x01;          // Data 0
00006c  2001              MOVS     r0,#1
00006e  7088              STRB     r0,[r1,#2]
;;;692    			MeterTxBuffer[3]=0x00;          // Data 1
000070  2000              MOVS     r0,#0
000072  70c8              STRB     r0,[r1,#3]
;;;693    			MeterTxBuffer[4]=0x00;          // Data 2
000074  7108              STRB     r0,[r1,#4]
;;;694    			MeterTxBuffer[5]=0x01;          // Data 3
000076  2001              MOVS     r0,#1
000078  7148              STRB     r0,[r1,#5]
;;;695    			CRC16(MeterTxBuffer,6);
00007a  2106              MOVS     r1,#6
00007c  4834              LDR      r0,|L25.336|
00007e  f7fffffe          BL       CRC16
;;;696    			MeterTxBuffer[6]=uchCRCHi;      // // CRC Checksum 
000082  4834              LDR      r0,|L25.340|
000084  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
000086  4932              LDR      r1,|L25.336|
000088  7188              STRB     r0,[r1,#6]
;;;697    			MeterTxBuffer[7]=uchCRCLo;      // // CRC Checksum 
00008a  4833              LDR      r0,|L25.344|
00008c  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
00008e  71c8              STRB     r0,[r1,#7]
;;;698    			_SendStringToMETER(MeterTxBuffer,8);   					
000090  2108              MOVS     r1,#8
000092  482f              LDR      r0,|L25.336|
000094  f7fffffe          BL       _SendStringToMETER
;;;699    			break;
000098  e051              B        |L25.318|
;;;700    		case MDBS_METER_SET_RELAY : 
;;;701    			MeterMBCmd = MDBS_METER_OTHER ;
00009a  201a              MOVS     r0,#0x1a
00009c  492a              LDR      r1,|L25.328|
00009e  7008              STRB     r0,[r1,#0]
;;;702    			MeterTxBuffer[1]=0x10;          // Function 
0000a0  2010              MOVS     r0,#0x10
0000a2  492b              LDR      r1,|L25.336|
0000a4  7048              STRB     r0,[r1,#1]
;;;703    			MeterTxBuffer[2]=0x00;          // Data 0
0000a6  2000              MOVS     r0,#0
0000a8  7088              STRB     r0,[r1,#2]
;;;704    			MeterTxBuffer[3]=0x03;          // Data 1
0000aa  2003              MOVS     r0,#3
0000ac  70c8              STRB     r0,[r1,#3]
;;;705    			MeterTxBuffer[4]=0x00;          // Data 2
0000ae  2000              MOVS     r0,#0
0000b0  7108              STRB     r0,[r1,#4]
;;;706    			MeterTxBuffer[5]=0x01;          // Data 3 
0000b2  2001              MOVS     r0,#1
0000b4  7148              STRB     r0,[r1,#5]
;;;707    			MeterTxBuffer[6]=0x02;          // Data 3 
0000b6  2002              MOVS     r0,#2
0000b8  7188              STRB     r0,[r1,#6]
;;;708    			MeterTxBuffer[7]=RelayOnOff;          // Data 3 
0000ba  4828              LDR      r0,|L25.348|
0000bc  7800              LDRB     r0,[r0,#0]  ; RelayOnOff
0000be  71c8              STRB     r0,[r1,#7]
;;;709    			MeterTxBuffer[8]=0x00;          // Data 3 
0000c0  2000              MOVS     r0,#0
0000c2  7208              STRB     r0,[r1,#8]
;;;710    			CRC16(MeterTxBuffer,9);
0000c4  2109              MOVS     r1,#9
0000c6  4822              LDR      r0,|L25.336|
0000c8  f7fffffe          BL       CRC16
;;;711    			MeterTxBuffer[9]=uchCRCHi;      // // CRC Checksum 
0000cc  4821              LDR      r0,|L25.340|
0000ce  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
0000d0  491f              LDR      r1,|L25.336|
0000d2  7248              STRB     r0,[r1,#9]
;;;712    			MeterTxBuffer[10]=uchCRCLo;      // // CRC Checksum 
0000d4  4820              LDR      r0,|L25.344|
0000d6  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
0000d8  7288              STRB     r0,[r1,#0xa]
;;;713    			_SendStringToMETER(MeterTxBuffer,11);   
0000da  210b              MOVS     r1,#0xb
0000dc  481c              LDR      r0,|L25.336|
0000de  f7fffffe          BL       _SendStringToMETER
;;;714    			break;
0000e2  e02c              B        |L25.318|
;;;715    		case MDBS_METER_SET_ADDR : 
;;;716    			MeterMBCmd = MDBS_METER_OTHER ;
0000e4  201a              MOVS     r0,#0x1a
0000e6  4918              LDR      r1,|L25.328|
0000e8  7008              STRB     r0,[r1,#0]
;;;717    			MeterTxBuffer[1]=0x10;          // Function 
0000ea  2010              MOVS     r0,#0x10
0000ec  4918              LDR      r1,|L25.336|
0000ee  7048              STRB     r0,[r1,#1]
;;;718    			MeterTxBuffer[2]=0x00;          // Data 0
0000f0  2000              MOVS     r0,#0
0000f2  7088              STRB     r0,[r1,#2]
;;;719    			MeterTxBuffer[3]=0x05;          // Data 1
0000f4  2005              MOVS     r0,#5
0000f6  70c8              STRB     r0,[r1,#3]
;;;720    			MeterTxBuffer[4]=0x00;          // Data 2
0000f8  2000              MOVS     r0,#0
0000fa  7108              STRB     r0,[r1,#4]
;;;721    			MeterTxBuffer[5]=0x01;          // Data 3 
0000fc  2001              MOVS     r0,#1
0000fe  7148              STRB     r0,[r1,#5]
;;;722    			MeterTxBuffer[6]=0x02;          // Data 3 
000100  2002              MOVS     r0,#2
000102  7188              STRB     r0,[r1,#6]
;;;723    			MeterTxBuffer[7]=PowerMeterNewAddr;          // Data 3 
000104  4816              LDR      r0,|L25.352|
000106  7800              LDRB     r0,[r0,#0]  ; PowerMeterNewAddr
000108  71c8              STRB     r0,[r1,#7]
;;;724    			MeterTxBuffer[8]=0x00;          // Data 3 
00010a  2000              MOVS     r0,#0
00010c  7208              STRB     r0,[r1,#8]
;;;725    			CRC16(MeterTxBuffer,9);
00010e  2109              MOVS     r1,#9
000110  480f              LDR      r0,|L25.336|
000112  f7fffffe          BL       CRC16
;;;726    			MeterTxBuffer[9]=uchCRCHi;      // // CRC Checksum 
000116  480f              LDR      r0,|L25.340|
000118  7800              LDRB     r0,[r0,#0]  ; uchCRCHi
00011a  490d              LDR      r1,|L25.336|
00011c  7248              STRB     r0,[r1,#9]
;;;727    			MeterTxBuffer[10]=uchCRCLo;      // // CRC Checksum 
00011e  480e              LDR      r0,|L25.344|
000120  7800              LDRB     r0,[r0,#0]  ; uchCRCLo
000122  7288              STRB     r0,[r1,#0xa]
;;;728    			_SendStringToMETER(MeterTxBuffer,11);   
000124  210b              MOVS     r1,#0xb
000126  480a              LDR      r0,|L25.336|
000128  f7fffffe          BL       _SendStringToMETER
;;;729    			break;
00012c  e007              B        |L25.318|
;;;730    		case MDBS_METER_SET_BAUDRATE : 
;;;731    			// No Support , Default is 9600
;;;732    			MeterMBCmd = MDBS_METER_OTHER ;
00012e  201a              MOVS     r0,#0x1a
000130  4905              LDR      r1,|L25.328|
000132  7008              STRB     r0,[r1,#0]
;;;733    			break;
000134  e003              B        |L25.318|
;;;734    		default :
;;;735    			MeterMBCmd = MDBS_METER_OTHER ;
000136  201a              MOVS     r0,#0x1a
000138  4903              LDR      r1,|L25.328|
00013a  7008              STRB     r0,[r1,#0]
;;;736    			break;
00013c  bf00              NOP      
                  |L25.318|
00013e  bf00              NOP                            ;673
;;;737    	}
;;;738    }
000140  bd10              POP      {r4,pc}
;;;739    
                          ENDP

000142  0000              DCW      0x0000
                  |L25.324|
                          DCD      ModBusStep
                  |L25.328|
                          DCD      MeterMBCmd
                  |L25.332|
                          DCD      bReadPowerMeterValue
                  |L25.336|
                          DCD      MeterTxBuffer
                  |L25.340|
                          DCD      uchCRCHi
                  |L25.344|
                          DCD      uchCRCLo
                  |L25.348|
                          DCD      RelayOnOff
                  |L25.352|
                          DCD      PowerMeterNewAddr

                          AREA ||i.DigitMeterPowerOFF||, CODE, READONLY, ALIGN=2

                  DigitMeterPowerOFF PROC
;;;119    }
;;;120    void DigitMeterPowerOFF(void)
000000  2004              MOVS     r0,#4
;;;121    {	
;;;122    	ModBusCommand = MBCMD_RELAY_OFF ;		
000002  4901              LDR      r1,|L26.8|
000004  7008              STRB     r0,[r1,#0]
;;;123    }
000006  4770              BX       lr
;;;124    
                          ENDP

                  |L26.8|
                          DCD      ModBusCommand

                          AREA ||i.DigitMeterPowerON||, CODE, READONLY, ALIGN=2

                  DigitMeterPowerON PROC
;;;115    
;;;116    void DigitMeterPowerON(void)
000000  2003              MOVS     r0,#3
;;;117    {
;;;118    	ModBusCommand = MBCMD_RELAY_ON ;	
000002  4901              LDR      r1,|L27.8|
000004  7008              STRB     r0,[r1,#0]
;;;119    }
000006  4770              BX       lr
;;;120    void DigitMeterPowerOFF(void)
                          ENDP

                  |L27.8|
                          DCD      ModBusCommand

                          AREA ||i.MODBUS_SendCmd||, CODE, READONLY, ALIGN=2

                  MODBUS_SendCmd PROC
;;;131    *******************************************************************************/
;;;132    void MODBUS_SendCmd(uint8_t cmd)
000000  b510              PUSH     {r4,lr}
;;;133    {
000002  4604              MOV      r4,r0
;;;134    	
;;;135    	//DIR485_METER_Out() ;
;;;136    	PowerMeterID = PollingMeterID ;
000004  481c              LDR      r0,|L28.120|
000006  7800              LDRB     r0,[r0,#0]  ; PollingMeterID
000008  491c              LDR      r1,|L28.124|
00000a  7008              STRB     r0,[r1,#0]
;;;137    	MeterTxBuffer[0]= PowerMeterID ; // Node ID
00000c  4608              MOV      r0,r1
00000e  7800              LDRB     r0,[r0,#0]  ; PowerMeterID
000010  491b              LDR      r1,|L28.128|
000012  7008              STRB     r0,[r1,#0]
;;;138    	GotMeterRsp = 0xFF ;
000014  20ff              MOVS     r0,#0xff
000016  491b              LDR      r1,|L28.132|
000018  7008              STRB     r0,[r1,#0]
;;;139            MeterErrorRate5Min_Tx[PowerMeterID-1][MeterErrorRate5Min_Wp]++;        
00001a  4818              LDR      r0,|L28.124|
00001c  7800              LDRB     r0,[r0,#0]  ; PowerMeterID
00001e  1e40              SUBS     r0,r0,#1
000020  2118              MOVS     r1,#0x18
000022  4348              MULS     r0,r1,r0
000024  4918              LDR      r1,|L28.136|
000026  1840              ADDS     r0,r0,r1
000028  4918              LDR      r1,|L28.140|
00002a  7809              LDRB     r1,[r1,#0]  ; MeterErrorRate5Min_Wp
00002c  0049              LSLS     r1,r1,#1
00002e  5a40              LDRH     r0,[r0,r1]
000030  1c40              ADDS     r0,r0,#1
000032  b281              UXTH     r1,r0
000034  4811              LDR      r0,|L28.124|
000036  7800              LDRB     r0,[r0,#0]  ; PowerMeterID
000038  1e40              SUBS     r0,r0,#1
00003a  2218              MOVS     r2,#0x18
00003c  4350              MULS     r0,r2,r0
00003e  4a12              LDR      r2,|L28.136|
000040  1880              ADDS     r0,r0,r2
000042  4a12              LDR      r2,|L28.140|
000044  7812              LDRB     r2,[r2,#0]  ; MeterErrorRate5Min_Wp
000046  0052              LSLS     r2,r2,#1
000048  5281              STRH     r1,[r0,r2]
;;;140    	switch ( MeterType )
00004a  4811              LDR      r0,|L28.144|
00004c  7800              LDRB     r0,[r0,#0]  ; MeterType
00004e  2801              CMP      r0,#1
000050  d004              BEQ      |L28.92|
000052  2802              CMP      r0,#2
000054  d006              BEQ      |L28.100|
000056  2803              CMP      r0,#3
000058  d10c              BNE      |L28.116|
00005a  e007              B        |L28.108|
                  |L28.92|
;;;141    	{
;;;142    		case DAE_530n540 :
;;;143    			// 台科電 DAE DEM530/540
;;;144    			CmdModBus_DEM5x0(cmd);
00005c  4620              MOV      r0,r4
00005e  f7fffffe          BL       CmdModBus_DEM5x0
;;;145    			break;
000062  e007              B        |L28.116|
                  |L28.100|
;;;146    		case CIC_BAW2A :
;;;147    			// 巧力 BAW-2A
;;;148    			CmdModBus_BAW2A(cmd);
000064  4620              MOV      r0,r4
000066  f7fffffe          BL       CmdModBus_BAW2A
;;;149    			break;
00006a  e003              B        |L28.116|
                  |L28.108|
;;;150    		case TUTANG_E21nE31 :
;;;151    			// 大同 E21/E31
;;;152    			CmdModBus_E21nE31(cmd);
00006c  4620              MOV      r0,r4
00006e  f7fffffe          BL       CmdModBus_E21nE31
;;;153    			break;
000072  bf00              NOP      
                  |L28.116|
000074  bf00              NOP                            ;145
;;;154    	}
;;;155    	    
;;;156    }
000076  bd10              POP      {r4,pc}
;;;157    
                          ENDP

                  |L28.120|
                          DCD      PollingMeterID
                  |L28.124|
                          DCD      PowerMeterID
                  |L28.128|
                          DCD      MeterTxBuffer
                  |L28.132|
                          DCD      GotMeterRsp
                  |L28.136|
                          DCD      MeterErrorRate5Min_Tx
                  |L28.140|
                          DCD      MeterErrorRate5Min_Wp
                  |L28.144|
                          DCD      MeterType

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  auchCRCHi
000000  00c18140          DCB      0x00,0xc1,0x81,0x40
000004  01c08041          DCB      0x01,0xc0,0x80,0x41
000008  01c08041          DCB      0x01,0xc0,0x80,0x41
00000c  00c18140          DCB      0x00,0xc1,0x81,0x40
000010  01c08041          DCB      0x01,0xc0,0x80,0x41
000014  00c18140          DCB      0x00,0xc1,0x81,0x40
000018  00c18140          DCB      0x00,0xc1,0x81,0x40
00001c  01c08041          DCB      0x01,0xc0,0x80,0x41
000020  01c08041          DCB      0x01,0xc0,0x80,0x41
000024  00c18140          DCB      0x00,0xc1,0x81,0x40
000028  00c18140          DCB      0x00,0xc1,0x81,0x40
00002c  01c08041          DCB      0x01,0xc0,0x80,0x41
000030  00c18140          DCB      0x00,0xc1,0x81,0x40
000034  01c08041          DCB      0x01,0xc0,0x80,0x41
000038  01c08041          DCB      0x01,0xc0,0x80,0x41
00003c  00c18140          DCB      0x00,0xc1,0x81,0x40
000040  01c08041          DCB      0x01,0xc0,0x80,0x41
000044  00c18140          DCB      0x00,0xc1,0x81,0x40
000048  00c18140          DCB      0x00,0xc1,0x81,0x40
00004c  01c08041          DCB      0x01,0xc0,0x80,0x41
000050  00c18140          DCB      0x00,0xc1,0x81,0x40
000054  01c08041          DCB      0x01,0xc0,0x80,0x41
000058  01c08041          DCB      0x01,0xc0,0x80,0x41
00005c  00c18140          DCB      0x00,0xc1,0x81,0x40
000060  00c18140          DCB      0x00,0xc1,0x81,0x40
000064  01c08041          DCB      0x01,0xc0,0x80,0x41
000068  01c08041          DCB      0x01,0xc0,0x80,0x41
00006c  00c18140          DCB      0x00,0xc1,0x81,0x40
000070  01c08041          DCB      0x01,0xc0,0x80,0x41
000074  00c18140          DCB      0x00,0xc1,0x81,0x40
000078  00c18140          DCB      0x00,0xc1,0x81,0x40
00007c  01c08041          DCB      0x01,0xc0,0x80,0x41
000080  01c08041          DCB      0x01,0xc0,0x80,0x41
000084  00c18140          DCB      0x00,0xc1,0x81,0x40
000088  00c18140          DCB      0x00,0xc1,0x81,0x40
00008c  01c08041          DCB      0x01,0xc0,0x80,0x41
000090  00c18140          DCB      0x00,0xc1,0x81,0x40
000094  01c08041          DCB      0x01,0xc0,0x80,0x41
000098  01c08041          DCB      0x01,0xc0,0x80,0x41
00009c  00c18140          DCB      0x00,0xc1,0x81,0x40
0000a0  00c18140          DCB      0x00,0xc1,0x81,0x40
0000a4  01c08041          DCB      0x01,0xc0,0x80,0x41
0000a8  01c08041          DCB      0x01,0xc0,0x80,0x41
0000ac  00c18140          DCB      0x00,0xc1,0x81,0x40
0000b0  01c08041          DCB      0x01,0xc0,0x80,0x41
0000b4  00c18140          DCB      0x00,0xc1,0x81,0x40
0000b8  00c18140          DCB      0x00,0xc1,0x81,0x40
0000bc  01c08041          DCB      0x01,0xc0,0x80,0x41
0000c0  00c18140          DCB      0x00,0xc1,0x81,0x40
0000c4  01c08041          DCB      0x01,0xc0,0x80,0x41
0000c8  01c08041          DCB      0x01,0xc0,0x80,0x41
0000cc  00c18140          DCB      0x00,0xc1,0x81,0x40
0000d0  01c08041          DCB      0x01,0xc0,0x80,0x41
0000d4  00c18140          DCB      0x00,0xc1,0x81,0x40
0000d8  00c18140          DCB      0x00,0xc1,0x81,0x40
0000dc  01c08041          DCB      0x01,0xc0,0x80,0x41
0000e0  01c08041          DCB      0x01,0xc0,0x80,0x41
0000e4  00c18140          DCB      0x00,0xc1,0x81,0x40
0000e8  00c18140          DCB      0x00,0xc1,0x81,0x40
0000ec  01c08041          DCB      0x01,0xc0,0x80,0x41
0000f0  00c18140          DCB      0x00,0xc1,0x81,0x40
0000f4  01c08041          DCB      0x01,0xc0,0x80,0x41
0000f8  01c08041          DCB      0x01,0xc0,0x80,0x41
0000fc  00c18140          DCB      0x00,0xc1,0x81,0x40
                  auchCRCLo
000100  00c0c101          DCB      0x00,0xc0,0xc1,0x01
000104  c30302c2          DCB      0xc3,0x03,0x02,0xc2
000108  c60607c7          DCB      0xc6,0x06,0x07,0xc7
00010c  05c5c404          DCB      0x05,0xc5,0xc4,0x04
000110  cc0c0dcd          DCB      0xcc,0x0c,0x0d,0xcd
000114  0fcfce0e          DCB      0x0f,0xcf,0xce,0x0e
000118  0acacb0b          DCB      0x0a,0xca,0xcb,0x0b
00011c  c90908c8          DCB      0xc9,0x09,0x08,0xc8
000120  d81819d9          DCB      0xd8,0x18,0x19,0xd9
000124  1bdbda1a          DCB      0x1b,0xdb,0xda,0x1a
000128  1ededf1f          DCB      0x1e,0xde,0xdf,0x1f
00012c  dd1d1cdc          DCB      0xdd,0x1d,0x1c,0xdc
000130  14d4d515          DCB      0x14,0xd4,0xd5,0x15
000134  d71716d6          DCB      0xd7,0x17,0x16,0xd6
000138  d21213d3          DCB      0xd2,0x12,0x13,0xd3
00013c  11d1d010          DCB      0x11,0xd1,0xd0,0x10
000140  f03031f1          DCB      0xf0,0x30,0x31,0xf1
000144  33f3f232          DCB      0x33,0xf3,0xf2,0x32
000148  36f6f737          DCB      0x36,0xf6,0xf7,0x37
00014c  f53534f4          DCB      0xf5,0x35,0x34,0xf4
000150  3cfcfd3d          DCB      0x3c,0xfc,0xfd,0x3d
000154  ff3f3efe          DCB      0xff,0x3f,0x3e,0xfe
000158  fa3a3bfb          DCB      0xfa,0x3a,0x3b,0xfb
00015c  39f9f838          DCB      0x39,0xf9,0xf8,0x38
000160  28e8e929          DCB      0x28,0xe8,0xe9,0x29
000164  eb2b2aea          DCB      0xeb,0x2b,0x2a,0xea
000168  ee2e2fef          DCB      0xee,0x2e,0x2f,0xef
00016c  2dedec2c          DCB      0x2d,0xed,0xec,0x2c
000170  e42425e5          DCB      0xe4,0x24,0x25,0xe5
000174  27e7e626          DCB      0x27,0xe7,0xe6,0x26
000178  22e2e323          DCB      0x22,0xe2,0xe3,0x23
00017c  e12120e0          DCB      0xe1,0x21,0x20,0xe0
000180  a06061a1          DCB      0xa0,0x60,0x61,0xa1
000184  63a3a262          DCB      0x63,0xa3,0xa2,0x62
000188  66a6a767          DCB      0x66,0xa6,0xa7,0x67
00018c  a56564a4          DCB      0xa5,0x65,0x64,0xa4
000190  6cacad6d          DCB      0x6c,0xac,0xad,0x6d
000194  af6f6eae          DCB      0xaf,0x6f,0x6e,0xae
000198  aa6a6bab          DCB      0xaa,0x6a,0x6b,0xab
00019c  69a9a868          DCB      0x69,0xa9,0xa8,0x68
0001a0  78b8b979          DCB      0x78,0xb8,0xb9,0x79
0001a4  bb7b7aba          DCB      0xbb,0x7b,0x7a,0xba
0001a8  be7e7fbf          DCB      0xbe,0x7e,0x7f,0xbf
0001ac  7dbdbc7c          DCB      0x7d,0xbd,0xbc,0x7c
0001b0  b47475b5          DCB      0xb4,0x74,0x75,0xb5
0001b4  77b7b676          DCB      0x77,0xb7,0xb6,0x76
0001b8  72b2b373          DCB      0x72,0xb2,0xb3,0x73
0001bc  b17170b0          DCB      0xb1,0x71,0x70,0xb0
0001c0  50909151          DCB      0x50,0x90,0x91,0x51
0001c4  93535292          DCB      0x93,0x53,0x52,0x92
0001c8  96565797          DCB      0x96,0x56,0x57,0x97
0001cc  55959454          DCB      0x55,0x95,0x94,0x54
0001d0  9c5c5d9d          DCB      0x9c,0x5c,0x5d,0x9d
0001d4  5f9f9e5e          DCB      0x5f,0x9f,0x9e,0x5e
0001d8  5a9a9b5b          DCB      0x5a,0x9a,0x9b,0x5b
0001dc  99595898          DCB      0x99,0x59,0x58,0x98
0001e0  88484989          DCB      0x88,0x48,0x49,0x89
0001e4  4b8b8a4a          DCB      0x4b,0x8b,0x8a,0x4a
0001e8  4e8e8f4f          DCB      0x4e,0x8e,0x8f,0x4f
0001ec  8d4d4c8c          DCB      0x8d,0x4d,0x4c,0x8c
0001f0  44848545          DCB      0x44,0x84,0x85,0x45
0001f4  87474686          DCB      0x87,0x47,0x46,0x86
0001f8  82424383          DCB      0x82,0x42,0x43,0x83
0001fc  41818040          DCB      0x41,0x81,0x80,0x40

                          AREA ||.data||, DATA, ALIGN=0

                  uchCRCHi
000000  ff                DCB      0xff
                  uchCRCLo
000001  ff                DCB      0xff
                  bReadPowerMeterValue
000002  00                DCB      0x00
                  ModBusStep
000003  00                DCB      0x00
                  ModBusCommand
000004  00                DCB      0x00
                  PowerMeterBaudRate
000005  00                DCB      0x00
                  RelayOnOff
000006  00                DCB      0x00
                  MeterMBCmd
000007  00                DCB      0x00
                  PayMode
000008  00                DCB      0x00
                  u8Year
000009  00                DCB      0x00
                  u8Month
00000a  00                DCB      0x00
                  u8Day
00000b  00                DCB      0x00
                  u8Hour
00000c  00                DCB      0x00
                  u8Min
00000d  00                DCB      0x00
                  u8Sec
00000e  00                DCB      0x00
                  u8Week
00000f  00                DCB      0x00

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d304              BCC      |L179.24|
                  |L179.14|
00000e  5d63              LDRB     r3,[r4,r5]
000010  005b              LSLS     r3,r3,#1
000012  18e3              ADDS     r3,r4,r3
000014  bc30              POP      {r4,r5}
000016  4718              BX       r3
                  |L179.24|
000018  461d              MOV      r5,r3
00001a  e7f8              B        |L179.14|
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\AO_ModBusProcess.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_AO_ModBusProcess_c_171d0f2a____REV16|
#line 388 "..\\..\\..\\NUC126_Series_BSP_CMSIS_V3.00.005\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_AO_ModBusProcess_c_171d0f2a____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_AO_ModBusProcess_c_171d0f2a____REVSH|
#line 402
|__asm___18_AO_ModBusProcess_c_171d0f2a____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
