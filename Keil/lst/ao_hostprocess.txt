; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\ao_hostprocess.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\ao_hostprocess.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\NUC126\Include -I..\..\..\Library\StdDriver\inc -I..\..\..\NUC126_Series_BSP_CMSIS_V3.00.005\Library\StdDriver\inc -I..\..\..\NUC126_Series_BSP_CMSIS_V3.00.005\Library\Device\Nuvoton\NUC126\Include -I..\..\..\NUC126_Series_BSP_CMSIS_V3.00.005\Library\CMSIS\Include -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 --omf_browse=.\obj\ao_hostprocess.crf ..\AO_HostProcess.c]
                          THUMB

                          AREA ||i.CalChecksumH||, CODE, READONLY, ALIGN=2

                  CalChecksumH PROC
;;;369    
;;;370    void CalChecksumH(void)
000000  b570              PUSH     {r4-r6,lr}
;;;371    {
;;;372    	uint8_t i;
;;;373    	uint8_t Checksum;
;;;374    
;;;375    	HostTxBuffer[0] = 0x55 ;
000002  2055              MOVS     r0,#0x55
000004  490d              LDR      r1,|L1.60|
000006  7008              STRB     r0,[r1,#0]
;;;376    	HostTxBuffer[1] = MyMeterID ;
000008  480d              LDR      r0,|L1.64|
00000a  7800              LDRB     r0,[r0,#0]  ; MyMeterID
00000c  7048              STRB     r0,[r1,#1]
;;;377    	Checksum = 0 ;
00000e  2500              MOVS     r5,#0
;;;378    	for (i=1;i<(MAX_HOST_TXQ_LENGTH-2);i++)
000010  2401              MOVS     r4,#1
000012  e005              B        |L1.32|
                  |L1.20|
;;;379    	{
;;;380    		Checksum += HostTxBuffer[i];
000014  4809              LDR      r0,|L1.60|
000016  5d00              LDRB     r0,[r0,r4]
000018  1940              ADDS     r0,r0,r5
00001a  b2c5              UXTB     r5,r0
00001c  1c60              ADDS     r0,r4,#1              ;378
00001e  b2c4              UXTB     r4,r0                 ;378
                  |L1.32|
000020  2c62              CMP      r4,#0x62              ;378
000022  dbf7              BLT      |L1.20|
;;;381    	}	
;;;382    	HostTxBuffer[MAX_HOST_TXQ_LENGTH-2] = Checksum ;
000024  4805              LDR      r0,|L1.60|
000026  3060              ADDS     r0,r0,#0x60
000028  7085              STRB     r5,[r0,#2]
;;;383    	HostTxBuffer[MAX_HOST_TXQ_LENGTH-1] = '\n' ; 
00002a  210a              MOVS     r1,#0xa
00002c  70c1              STRB     r1,[r0,#3]
;;;384    	EnableHostUartTx(); 
00002e  f7fffffe          BL       EnableHostUartTx
;;;385    	//DIR485_HOST_Out();
;;;386    	_SendStringToHOST(HostTxBuffer,MAX_HOST_TXQ_LENGTH);
000032  2164              MOVS     r1,#0x64
000034  4801              LDR      r0,|L1.60|
000036  f7fffffe          BL       _SendStringToHOST
;;;387    	
;;;388    }
00003a  bd70              POP      {r4-r6,pc}
;;;389    
                          ENDP

                  |L1.60|
                          DCD      HostTxBuffer
                  |L1.64|
                          DCD      MyMeterID

                          AREA ||i.ClearRespDelayTimer||, CODE, READONLY, ALIGN=2

                  ClearRespDelayTimer PROC
;;;165    
;;;166    void ClearRespDelayTimer(void)
000000  2001              MOVS     r0,#1
;;;167    {
;;;168    	WaitTime = 1 ;
000002  4904              LDR      r1,|L2.20|
000004  7008              STRB     r0,[r1,#0]
;;;169    	bDelaySendHostCMD = 1 ;
000006  4904              LDR      r1,|L2.24|
000008  7008              STRB     r0,[r1,#0]
;;;170    	iTickDelaySendHostCMD = 0 ;	
00000a  2000              MOVS     r0,#0
00000c  4903              LDR      r1,|L2.28|
00000e  7008              STRB     r0,[r1,#0]
;;;171    }
000010  4770              BX       lr
;;;172    
                          ENDP

000012  0000              DCW      0x0000
                  |L2.20|
                          DCD      WaitTime
                  |L2.24|
                          DCD      bDelaySendHostCMD
                  |L2.28|
                          DCD      iTickDelaySendHostCMD

                          AREA ||i.HostProcess||, CODE, READONLY, ALIGN=2

                  HostProcess PROC
;;;72       *********************************/
;;;73     void HostProcess(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;74     {
;;;75         uint8_t i,checksum,fgDataReady,fgFromHostRSPFlag;
;;;76     
;;;77         if ( TickHost == 49 )
000002  4851              LDR      r0,|L3.328|
000004  7800              LDRB     r0,[r0,#0]  ; TickHost
000006  2831              CMP      r0,#0x31
000008  d106              BNE      |L3.24|
;;;78         {
;;;79             TickHost++;
00000a  484f              LDR      r0,|L3.328|
00000c  7800              LDRB     r0,[r0,#0]  ; TickHost
00000e  1c40              ADDS     r0,r0,#1
000010  494d              LDR      r1,|L3.328|
000012  7008              STRB     r0,[r1,#0]
;;;80             ResetHostUART();	
000014  f7fffffe          BL       ResetHostUART
                  |L3.24|
;;;81         }
;;;82         if( HOSTTokenReady )
000018  484c              LDR      r0,|L3.332|
00001a  7800              LDRB     r0,[r0,#0]  ; HOSTTokenReady
00001c  2800              CMP      r0,#0
00001e  d069              BEQ      |L3.244|
;;;83         {
;;;84             HOSTTokenReady = 0 ;
000020  2000              MOVS     r0,#0
000022  494a              LDR      r1,|L3.332|
000024  7008              STRB     r0,[r1,#0]
;;;85             fgDataReady = 0 ;
000026  2600              MOVS     r6,#0
;;;86             checksum = 0 ;
000028  2500              MOVS     r5,#0
;;;87     
;;;88             for(i=1;i<(HOST_TOKEN_LENGTH-2);i++)
00002a  2401              MOVS     r4,#1
00002c  e005              B        |L3.58|
                  |L3.46|
;;;89             {
;;;90                 checksum += TokenHost[i];				
00002e  4848              LDR      r0,|L3.336|
000030  5d00              LDRB     r0,[r0,r4]
000032  1940              ADDS     r0,r0,r5
000034  b2c5              UXTB     r5,r0
000036  1c60              ADDS     r0,r4,#1              ;88
000038  b2c4              UXTB     r4,r0                 ;88
                  |L3.58|
00003a  2c62              CMP      r4,#0x62              ;88
00003c  dbf7              BLT      |L3.46|
;;;91             }        
;;;92             LastPackageChecksum = checksum ;
00003e  4845              LDR      r0,|L3.340|
000040  7005              STRB     r5,[r0,#0]
;;;93             if ( (TokenHost[0] == 0x55) && (TokenHost[HOST_TOKEN_LENGTH-2] == checksum) && (TokenHost[HOST_TOKEN_LENGTH-1] == 0x0A))
000042  4843              LDR      r0,|L3.336|
000044  7800              LDRB     r0,[r0,#0]  ; TokenHost
000046  2855              CMP      r0,#0x55
000048  d10e              BNE      |L3.104|
00004a  4841              LDR      r0,|L3.336|
00004c  3060              ADDS     r0,r0,#0x60
00004e  7880              LDRB     r0,[r0,#2]  ; TokenHost
000050  42a8              CMP      r0,r5
000052  d109              BNE      |L3.104|
000054  483e              LDR      r0,|L3.336|
000056  3060              ADDS     r0,r0,#0x60
000058  78c0              LDRB     r0,[r0,#3]  ; TokenHost
00005a  280a              CMP      r0,#0xa
00005c  d104              BNE      |L3.104|
;;;94             {
;;;95                 fgDataReady = 1 ;            
00005e  2601              MOVS     r6,#1
;;;96                 MeterActive = TokenHost[1] ;
000060  483b              LDR      r0,|L3.336|
000062  7840              LDRB     r0,[r0,#1]  ; TokenHost
000064  493c              LDR      r1,|L3.344|
000066  7008              STRB     r0,[r1,#0]
                  |L3.104|
;;;97             }
;;;98             // 0x55,CenterID,CMD,....,Checksum,\n
;;;99             if (fgDataReady)
000068  2e00              CMP      r6,#0
00006a  d041              BEQ      |L3.240|
;;;100            {					
;;;101    
;;;102                if ( TokenHost[2] == METER_CMD_ALIVE )
00006c  4838              LDR      r0,|L3.336|
00006e  7880              LDRB     r0,[r0,#2]  ; TokenHost
000070  2810              CMP      r0,#0x10
000072  d101              BNE      |L3.120|
;;;103                {
;;;104                    Host_AliveProcess();
000074  f7fffffe          BL       Host_AliveProcess
                  |L3.120|
;;;105                }
;;;106            
;;;107                if ( (TokenHost[1] == MyMeterID) || (TokenHost[1] == 0xFF)  )
000078  4835              LDR      r0,|L3.336|
00007a  7840              LDRB     r0,[r0,#1]  ; TokenHost
00007c  4937              LDR      r1,|L3.348|
00007e  7809              LDRB     r1,[r1,#0]  ; MyMeterID
000080  4288              CMP      r0,r1
000082  d003              BEQ      |L3.140|
000084  4832              LDR      r0,|L3.336|
000086  7840              LDRB     r0,[r0,#1]  ; TokenHost
000088  28ff              CMP      r0,#0xff
00008a  d133              BNE      |L3.244|
                  |L3.140|
;;;108                {
;;;109                    HostMeterIndex = TokenHost[1]-1 ;	
00008c  4830              LDR      r0,|L3.336|
00008e  7840              LDRB     r0,[r0,#1]  ; TokenHost
000090  1e40              SUBS     r0,r0,#1
000092  4933              LDR      r1,|L3.352|
000094  7008              STRB     r0,[r1,#0]
;;;110                    fgFromHostFlag = TokenHost[3];
000096  482e              LDR      r0,|L3.336|
000098  78c0              LDRB     r0,[r0,#3]  ; TokenHost
00009a  4932              LDR      r1,|L3.356|
00009c  7008              STRB     r0,[r1,#0]
;;;111                    fgFromHostRSPFlag = TokenHost[4];
00009e  482c              LDR      r0,|L3.336|
0000a0  7907              LDRB     r7,[r0,#4]  ; TokenHost
;;;112                    fgToHostFlag &= fgFromHostRSPFlag;
0000a2  4831              LDR      r0,|L3.360|
0000a4  7800              LDRB     r0,[r0,#0]  ; fgToHostFlag
0000a6  4038              ANDS     r0,r0,r7
0000a8  492f              LDR      r1,|L3.360|
0000aa  7008              STRB     r0,[r1,#0]
;;;113                    LED_R_TOGGLE();                    
0000ac  482f              LDR      r0,|L3.364|
0000ae  6880              LDR      r0,[r0,#8]
0000b0  2101              MOVS     r1,#1
0000b2  4048              EORS     r0,r0,r1
0000b4  492d              LDR      r1,|L3.364|
0000b6  6088              STR      r0,[r1,#8]
;;;114                    fgToHostRSPFlag = 0xFF ;                
0000b8  20ff              MOVS     r0,#0xff
0000ba  492d              LDR      r1,|L3.368|
0000bc  7008              STRB     r0,[r1,#0]
;;;115                // Token ready
;;;116                    switch( TokenHost[2] )
0000be  4824              LDR      r0,|L3.336|
0000c0  7880              LDRB     r0,[r0,#2]  ; TokenHost
0000c2  2810              CMP      r0,#0x10
0000c4  d002              BEQ      |L3.204|
0000c6  2815              CMP      r0,#0x15
0000c8  d110              BNE      |L3.236|
0000ca  e007              B        |L3.220|
                  |L3.204|
;;;117                    {
;;;118                        case METER_CMD_ALIVE :
;;;119                            // 0x55, CenterID, CMD, RoomID, ... System Time(17~22)
;;;120                            Host_AliveProcess();						
0000cc  f7fffffe          BL       Host_AliveProcess
;;;121                            CmdType = METER_RSP_SYS_INFO ;
0000d0  2031              MOVS     r0,#0x31
0000d2  4928              LDR      r1,|L3.372|
0000d4  7008              STRB     r0,[r1,#0]
;;;122                            ClearRespDelayTimer() ;	
0000d6  f7fffffe          BL       ClearRespDelayTimer
;;;123                            break;							
0000da  e008              B        |L3.238|
                  |L3.220|
;;;124                        case METER_CMD_GET_POWER_DATA :
;;;125                            Host_GetPowerDataProcess();                        
0000dc  f7fffffe          BL       Host_GetPowerDataProcess
;;;126                            CmdType = METER_RSP_POWER_DATA ;
0000e0  2033              MOVS     r0,#0x33
0000e2  4924              LDR      r1,|L3.372|
0000e4  7008              STRB     r0,[r1,#0]
;;;127                            ClearRespDelayTimer() ;	
0000e6  f7fffffe          BL       ClearRespDelayTimer
;;;128                            break;											
0000ea  e000              B        |L3.238|
                  |L3.236|
;;;129    
;;;130                        default:
;;;131                            break;
0000ec  bf00              NOP      
                  |L3.238|
0000ee  e001              B        |L3.244|
                  |L3.240|
;;;132                    }
;;;133                }			
;;;134            } else {			
;;;135                ResetHostUART();
0000f0  f7fffffe          BL       ResetHostUART
                  |L3.244|
;;;136            }
;;;137        }
;;;138                
;;;139        if ( bDelaySendHostCMD )
0000f4  4820              LDR      r0,|L3.376|
0000f6  7800              LDRB     r0,[r0,#0]  ; bDelaySendHostCMD
0000f8  2800              CMP      r0,#0
0000fa  d023              BEQ      |L3.324|
;;;140        {
;;;141            if ( iTickDelaySendHostCMD > WaitTime)
0000fc  481f              LDR      r0,|L3.380|
0000fe  7800              LDRB     r0,[r0,#0]  ; iTickDelaySendHostCMD
000100  491f              LDR      r1,|L3.384|
000102  7809              LDRB     r1,[r1,#0]  ; WaitTime
000104  4288              CMP      r0,r1
000106  dd1d              BLE      |L3.324|
;;;142            {
;;;143                bDelaySendHostCMD = 0 ;
000108  2000              MOVS     r0,#0
00010a  491b              LDR      r1,|L3.376|
00010c  7008              STRB     r0,[r1,#0]
;;;144                if ( (HostMeterIndex+1) == MyMeterID )
00010e  4814              LDR      r0,|L3.352|
000110  7800              LDRB     r0,[r0,#0]  ; HostMeterIndex
000112  1c40              ADDS     r0,r0,#1
000114  4911              LDR      r1,|L3.348|
000116  7809              LDRB     r1,[r1,#0]  ; MyMeterID
000118  4288              CMP      r0,r1
00011a  d113              BNE      |L3.324|
;;;145                {
;;;146                    switch (CmdType)
00011c  4815              LDR      r0,|L3.372|
00011e  7800              LDRB     r0,[r0,#0]  ; CmdType
000120  2830              CMP      r0,#0x30
000122  d007              BEQ      |L3.308|
000124  2831              CMP      r0,#0x31
000126  d002              BEQ      |L3.302|
000128  2833              CMP      r0,#0x33
00012a  d109              BNE      |L3.320|
00012c  e005              B        |L3.314|
                  |L3.302|
;;;147                    {
;;;148                        case METER_RSP_SYS_INFO :
;;;149                            SendHost_SystemInformation();
00012e  f7fffffe          BL       SendHost_SystemInformation
;;;150                            break;
000132  e006              B        |L3.322|
                  |L3.308|
;;;151                        case METER_RSP_ACK:
;;;152                            SendHost_Ack();
000134  f7fffffe          BL       SendHost_Ack
;;;153                            break;
000138  e003              B        |L3.322|
                  |L3.314|
;;;154                       
;;;155                        case METER_RSP_POWER_DATA :
;;;156                            SendHost_PowerData();
00013a  f7fffffe          BL       SendHost_PowerData
;;;157                            break;					
00013e  e000              B        |L3.322|
                  |L3.320|
;;;158                        default :
;;;159                            break;
000140  bf00              NOP      
                  |L3.322|
000142  bf00              NOP                            ;150
                  |L3.324|
;;;160                    }            
;;;161                }
;;;162            }
;;;163        }
;;;164    }
000144  bdf8              POP      {r3-r7,pc}
;;;165    
                          ENDP

000146  0000              DCW      0x0000
                  |L3.328|
                          DCD      TickHost
                  |L3.332|
                          DCD      HOSTTokenReady
                  |L3.336|
                          DCD      TokenHost
                  |L3.340|
                          DCD      LastPackageChecksum
                  |L3.344|
                          DCD      MeterActive
                  |L3.348|
                          DCD      MyMeterID
                  |L3.352|
                          DCD      HostMeterIndex
                  |L3.356|
                          DCD      fgFromHostFlag
                  |L3.360|
                          DCD      fgToHostFlag
                  |L3.364|
                          DCD      0x50004340
                  |L3.368|
                          DCD      fgToHostRSPFlag
                  |L3.372|
                          DCD      CmdType
                  |L3.376|
                          DCD      bDelaySendHostCMD
                  |L3.380|
                          DCD      iTickDelaySendHostCMD
                  |L3.384|
                          DCD      WaitTime

                          AREA ||i.Host_AliveProcess||, CODE, READONLY, ALIGN=2

                  Host_AliveProcess PROC
;;;173    
;;;174    void Host_AliveProcess(void)
000000  b570              PUSH     {r4-r6,lr}
;;;175    {
;;;176        uint8_t i;
;;;177        uint8_t u8BuferIndex;
;;;178        uint8_t HostData_P,HostData_N;
;;;179        //uint8_t CmdOpenDoor1,CmdOpenDoor2;
;;;180        
;;;181        for (i=0;i<7;i++)
000002  2000              MOVS     r0,#0
000004  e007              B        |L4.22|
                  |L4.6|
;;;182        {
;;;183            iSystemTime[i] = TokenHost[INX_TIME_START_Y+i];
000006  4604              MOV      r4,r0
000008  345b              ADDS     r4,r4,#0x5b
00000a  4d21              LDR      r5,|L4.144|
00000c  5d2c              LDRB     r4,[r5,r4]
00000e  4d21              LDR      r5,|L4.148|
000010  542c              STRB     r4,[r5,r0]
000012  1c44              ADDS     r4,r0,#1              ;181
000014  b2e0              UXTB     r0,r4                 ;181
                  |L4.22|
000016  2807              CMP      r0,#7                 ;181
000018  dbf5              BLT      |L4.6|
;;;184        }
;;;185        
;;;186        HostData_P = TokenHost[5];
00001a  4c1d              LDR      r4,|L4.144|
00001c  7961              LDRB     r1,[r4,#5]  ; TokenHost
;;;187        HostData_N =  TokenHost[6];
00001e  79a2              LDRB     r2,[r4,#6]  ; TokenHost
;;;188        if ( HostData_P == (255-HostData_N) )
000020  24ff              MOVS     r4,#0xff
000022  1aa4              SUBS     r4,r4,r2
000024  428c              CMP      r4,r1
000026  d101              BNE      |L4.44|
;;;189        {
;;;190            MaxPowerMeter = HostData_P;
000028  4c1b              LDR      r4,|L4.152|
00002a  7021              STRB     r1,[r4,#0]
                  |L4.44|
;;;191        }
;;;192        HostData_P = TokenHost[7];
00002c  4c18              LDR      r4,|L4.144|
00002e  79e1              LDRB     r1,[r4,#7]  ; TokenHost
;;;193        HostData_N =  TokenHost[8];
000030  7a22              LDRB     r2,[r4,#8]  ; TokenHost
;;;194        if ( HostData_P == (255-HostData_N) )
000032  24ff              MOVS     r4,#0xff
000034  1aa4              SUBS     r4,r4,r2
000036  428c              CMP      r4,r1
000038  d10f              BNE      |L4.90|
;;;195        {
;;;196            if ( HostData_P == 0x30 )
00003a  2930              CMP      r1,#0x30
00003c  d10d              BNE      |L4.90|
;;;197            {
;;;198                u8BuferIndex = 9 ;
00003e  2309              MOVS     r3,#9
;;;199                for (i=0;i<MAX_POWER_METER;i++)
000040  2000              MOVS     r0,#0
000042  e008              B        |L4.86|
                  |L4.68|
;;;200                {
;;;201                    RoomMode[i] = TokenHost[u8BuferIndex++];
000044  461c              MOV      r4,r3
000046  1c5d              ADDS     r5,r3,#1
000048  b2eb              UXTB     r3,r5
00004a  4d11              LDR      r5,|L4.144|
00004c  5d2c              LDRB     r4,[r5,r4]
00004e  4d13              LDR      r5,|L4.156|
000050  542c              STRB     r4,[r5,r0]
000052  1c44              ADDS     r4,r0,#1              ;199
000054  b2e0              UXTB     r0,r4                 ;199
                  |L4.86|
000056  281f              CMP      r0,#0x1f              ;199
000058  dbf4              BLT      |L4.68|
                  |L4.90|
;;;202                }            
;;;203            }
;;;204        }
;;;205    
;;;206        if ( (iSystemTime[4] == 0) && (iSystemTime[5] == 0))        
00005a  4c0e              LDR      r4,|L4.148|
00005c  7924              LDRB     r4,[r4,#4]  ; iSystemTime
00005e  2c00              CMP      r4,#0
000060  d115              BNE      |L4.142|
000062  4c0c              LDR      r4,|L4.148|
000064  7964              LDRB     r4,[r4,#5]  ; iSystemTime
000066  2c00              CMP      r4,#0
000068  d111              BNE      |L4.142|
;;;207        {
;;;208            for (i=0;i<MAX_POWER_METER;i++)
00006a  2000              MOVS     r0,#0
00006c  e00d              B        |L4.138|
                  |L4.110|
;;;209            {
;;;210                if ( PowerMeterTxCounter[i] > 10 )
00006e  0084              LSLS     r4,r0,#2
000070  4d0b              LDR      r5,|L4.160|
000072  592c              LDR      r4,[r5,r4]
000074  2c0a              CMP      r4,#0xa
000076  d906              BLS      |L4.134|
;;;211                {
;;;212                    PowerMeterTxCounter[i]=1;
000078  2401              MOVS     r4,#1
00007a  0085              LSLS     r5,r0,#2
00007c  4e08              LDR      r6,|L4.160|
00007e  5174              STR      r4,[r6,r5]
;;;213                    PowerMeterRxCounter[i]=1;
000080  0085              LSLS     r5,r0,#2
000082  4e08              LDR      r6,|L4.164|
000084  5174              STR      r4,[r6,r5]
                  |L4.134|
000086  1c44              ADDS     r4,r0,#1              ;208
000088  b2e0              UXTB     r0,r4                 ;208
                  |L4.138|
00008a  281f              CMP      r0,#0x1f              ;208
00008c  dbef              BLT      |L4.110|
                  |L4.142|
;;;214                }
;;;215            }
;;;216        }
;;;217        
;;;218    }
00008e  bd70              POP      {r4-r6,pc}
;;;219    
                          ENDP

                  |L4.144|
                          DCD      TokenHost
                  |L4.148|
                          DCD      iSystemTime
                  |L4.152|
                          DCD      MaxPowerMeter
                  |L4.156|
                          DCD      RoomMode
                  |L4.160|
                          DCD      PowerMeterTxCounter
                  |L4.164|
                          DCD      PowerMeterRxCounter

                          AREA ||i.Host_GetPowerDataProcess||, CODE, READONLY, ALIGN=2

                  Host_GetPowerDataProcess PROC
;;;219    
;;;220    void Host_GetPowerDataProcess(void)
000000  2000              MOVS     r0,#0
;;;221    {
;;;222        uint8_t i;
;;;223    	  //u8BuferIndex;
;;;224        //uint8_t HostData_P,HostData_N;
;;;225        //uint8_t CmdOpenDoor1,CmdOpenDoor2;
;;;226        
;;;227        for (i=0;i<7;i++)
000002  e007              B        |L5.20|
                  |L5.4|
;;;228        {
;;;229            iSystemTime[i] = TokenHost[INX_TIME_START_Y+i];
000004  4601              MOV      r1,r0
000006  315b              ADDS     r1,r1,#0x5b
000008  4a06              LDR      r2,|L5.36|
00000a  5c51              LDRB     r1,[r2,r1]
00000c  4a06              LDR      r2,|L5.40|
00000e  5411              STRB     r1,[r2,r0]
000010  1c41              ADDS     r1,r0,#1              ;227
000012  b2c8              UXTB     r0,r1                 ;227
                  |L5.20|
000014  2807              CMP      r0,#7                 ;227
000016  dbf5              BLT      |L5.4|
;;;230        }
;;;231        HostPowerMeterIndex = TokenHost[3];
000018  4902              LDR      r1,|L5.36|
00001a  78c9              LDRB     r1,[r1,#3]  ; TokenHost
00001c  4a03              LDR      r2,|L5.44|
00001e  7011              STRB     r1,[r2,#0]
;;;232    /*    
;;;233        HostData_P = TokenHost[3];
;;;234        HostData_N =  TokenHost[4];
;;;235        if ( HostData_P == (255-HostData_N) )
;;;236        {
;;;237            MaxPowerMeter = HostData_P;
;;;238        }
;;;239        HostData_P = TokenHost[5];
;;;240        HostData_N =  TokenHost[6];
;;;241        if ( HostData_P == (255-HostData_N) )
;;;242        {
;;;243            for (i=0;i<MAX_POWER_METER;i++)
;;;244            MeterErrorRate[i] = 100;
;;;245            MeterErrorRate_Tx[i] = 1;
;;;246            MeterErrorRate_Rx[i] = 1;
;;;247        }
;;;248    */    
;;;249        
;;;250    }
000020  4770              BX       lr
;;;251    
                          ENDP

000022  0000              DCW      0x0000
                  |L5.36|
                          DCD      TokenHost
                  |L5.40|
                          DCD      iSystemTime
                  |L5.44|
                          DCD      HostPowerMeterIndex

                          AREA ||i.SendHost_Ack||, CODE, READONLY, ALIGN=2

                  SendHost_Ack PROC
;;;348    */
;;;349    void SendHost_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;350    {
;;;351        uint8_t fnPacketIndex;
;;;352        //uint8_t *tmpAddr;
;;;353    
;;;354        HostTxBuffer[2] = METER_RSP_ACK ;	
000002  2030              MOVS     r0,#0x30
000004  4916              LDR      r1,|L6.96|
000006  7088              STRB     r0,[r1,#2]
;;;355        HostTxBuffer[3] = fgToHostFlag; 
000008  4816              LDR      r0,|L6.100|
00000a  7800              LDRB     r0,[r0,#0]  ; fgToHostFlag
00000c  70c8              STRB     r0,[r1,#3]
;;;356        HostTxBuffer[4] = fgToHostRSPFlag; 
00000e  4816              LDR      r0,|L6.104|
000010  7800              LDRB     r0,[r0,#0]  ; fgToHostRSPFlag
000012  7108              STRB     r0,[r1,#4]
;;;357        fnPacketIndex = 5 ; 
000014  2405              MOVS     r4,#5
;;;358        HostTxBuffer[fnPacketIndex++] = (PowerMeterError & 0xFF000000) >> 24 ;
000016  4815              LDR      r0,|L6.108|
000018  6800              LDR      r0,[r0,#0]  ; PowerMeterError
00001a  0e02              LSRS     r2,r0,#24
00001c  4621              MOV      r1,r4
00001e  1c64              ADDS     r4,r4,#1
000020  480f              LDR      r0,|L6.96|
000022  5442              STRB     r2,[r0,r1]
;;;359        HostTxBuffer[fnPacketIndex++] = (PowerMeterError & 0x00FF0000) >> 16 ;
000024  4811              LDR      r0,|L6.108|
000026  6800              LDR      r0,[r0,#0]  ; PowerMeterError
000028  21ff              MOVS     r1,#0xff
00002a  0409              LSLS     r1,r1,#16
00002c  4008              ANDS     r0,r0,r1
00002e  0c02              LSRS     r2,r0,#16
000030  4621              MOV      r1,r4
000032  1c64              ADDS     r4,r4,#1
000034  480a              LDR      r0,|L6.96|
000036  5442              STRB     r2,[r0,r1]
;;;360        HostTxBuffer[fnPacketIndex++] = (PowerMeterError & 0x0000FF00) >> 8 ;
000038  480c              LDR      r0,|L6.108|
00003a  6800              LDR      r0,[r0,#0]  ; PowerMeterError
00003c  21ff              MOVS     r1,#0xff
00003e  0209              LSLS     r1,r1,#8
000040  4008              ANDS     r0,r0,r1
000042  0a02              LSRS     r2,r0,#8
000044  4621              MOV      r1,r4
000046  1c64              ADDS     r4,r4,#1
000048  4805              LDR      r0,|L6.96|
00004a  5442              STRB     r2,[r0,r1]
;;;361        HostTxBuffer[fnPacketIndex++] = PowerMeterError & 0x000000FF ;    
00004c  4807              LDR      r0,|L6.108|
00004e  7802              LDRB     r2,[r0,#0]  ; PowerMeterError
000050  4621              MOV      r1,r4
000052  1c64              ADDS     r4,r4,#1
000054  4802              LDR      r0,|L6.96|
000056  5442              STRB     r2,[r0,r1]
;;;362        CalChecksumH();	
000058  f7fffffe          BL       CalChecksumH
;;;363    	  
;;;364    }
00005c  bd10              POP      {r4,pc}
;;;365    
                          ENDP

00005e  0000              DCW      0x0000
                  |L6.96|
                          DCD      HostTxBuffer
                  |L6.100|
                          DCD      fgToHostFlag
                  |L6.104|
                          DCD      fgToHostRSPFlag
                  |L6.108|
                          DCD      PowerMeterError

                          AREA ||i.SendHost_PowerData||, CODE, READONLY, ALIGN=2

                  SendHost_PowerData PROC
;;;278    
;;;279    void SendHost_PowerData(void)
000000  b570              PUSH     {r4-r6,lr}
;;;280    {
;;;281        uint8_t fnPacketIndex,u8PowerMeterID;
;;;282        //uint8_t *tmpAddr;
;;;283        u8PowerMeterID = HostPowerMeterIndex-1;
000002  48d9              LDR      r0,|L7.872|
000004  7800              LDRB     r0,[r0,#0]  ; HostPowerMeterIndex
000006  1e40              SUBS     r0,r0,#1
000008  b2c4              UXTB     r4,r0
;;;284        HostTxBuffer[2] = METER_RSP_POWER_DATA ;	
00000a  2033              MOVS     r0,#0x33
00000c  49d7              LDR      r1,|L7.876|
00000e  7088              STRB     r0,[r1,#2]
;;;285        HostTxBuffer[3] = fgToHostFlag; 	
000010  48d7              LDR      r0,|L7.880|
000012  7800              LDRB     r0,[r0,#0]  ; fgToHostFlag
000014  70c8              STRB     r0,[r1,#3]
;;;286        HostTxBuffer[4] = u8PowerMeterID ; 	
000016  4608              MOV      r0,r1
000018  7104              STRB     r4,[r0,#4]
;;;287        fnPacketIndex = 5;
00001a  2505              MOVS     r5,#5
;;;288        HostTxBuffer[fnPacketIndex++] = MeterData[u8PowerMeterID].PayMode ;
00001c  2024              MOVS     r0,#0x24
00001e  4360              MULS     r0,r4,r0
000020  49d4              LDR      r1,|L7.884|
000022  1840              ADDS     r0,r0,r1
000024  7842              LDRB     r2,[r0,#1]
000026  4629              MOV      r1,r5
000028  1c6d              ADDS     r5,r5,#1
00002a  48d0              LDR      r0,|L7.876|
00002c  5442              STRB     r2,[r0,r1]
;;;289        HostTxBuffer[fnPacketIndex++] = MeterErrorRate[u8PowerMeterID];    
00002e  48d2              LDR      r0,|L7.888|
000030  5d02              LDRB     r2,[r0,r4]
000032  4629              MOV      r1,r5
000034  1c6d              ADDS     r5,r5,#1
000036  48cd              LDR      r0,|L7.876|
000038  5442              STRB     r2,[r0,r1]
;;;290        HostTxBuffer[fnPacketIndex++] = MeterData[u8PowerMeterID].RelayStatus;
00003a  2024              MOVS     r0,#0x24
00003c  4360              MULS     r0,r4,r0
00003e  49cd              LDR      r1,|L7.884|
000040  5c0a              LDRB     r2,[r1,r0]
000042  4629              MOV      r1,r5
000044  1c6d              ADDS     r5,r5,#1
000046  48c9              LDR      r0,|L7.876|
000048  5442              STRB     r2,[r0,r1]
;;;291        HostTxBuffer[fnPacketIndex++] = MeterData[u8PowerMeterID].UserStatus;
00004a  2024              MOVS     r0,#0x24
00004c  4360              MULS     r0,r4,r0
00004e  49c9              LDR      r1,|L7.884|
000050  1840              ADDS     r0,r0,r1
000052  7882              LDRB     r2,[r0,#2]
000054  4629              MOV      r1,r5
000056  1c6d              ADDS     r5,r5,#1
000058  48c4              LDR      r0,|L7.876|
00005a  5442              STRB     r2,[r0,r1]
;;;292        // Total 
;;;293        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterTotalWatt & 0xFF000000) >> 24 ;
00005c  2024              MOVS     r0,#0x24
00005e  4360              MULS     r0,r4,r0
000060  49c4              LDR      r1,|L7.884|
000062  1840              ADDS     r0,r0,r1
000064  6840              LDR      r0,[r0,#4]
000066  0e02              LSRS     r2,r0,#24
000068  4629              MOV      r1,r5
00006a  1c6d              ADDS     r5,r5,#1
00006c  48bf              LDR      r0,|L7.876|
00006e  5442              STRB     r2,[r0,r1]
;;;294        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterTotalWatt & 0x00FF0000) >> 16 ;
000070  2024              MOVS     r0,#0x24
000072  4360              MULS     r0,r4,r0
000074  49bf              LDR      r1,|L7.884|
000076  1840              ADDS     r0,r0,r1
000078  6840              LDR      r0,[r0,#4]
00007a  21ff              MOVS     r1,#0xff
00007c  0409              LSLS     r1,r1,#16
00007e  4008              ANDS     r0,r0,r1
000080  0c02              LSRS     r2,r0,#16
000082  4628              MOV      r0,r5
000084  1c69              ADDS     r1,r5,#1
000086  b2cd              UXTB     r5,r1
000088  49b8              LDR      r1,|L7.876|
00008a  540a              STRB     r2,[r1,r0]
;;;295        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterTotalWatt & 0x0000FF00) >> 8 ;
00008c  2024              MOVS     r0,#0x24
00008e  4360              MULS     r0,r4,r0
000090  49b8              LDR      r1,|L7.884|
000092  1840              ADDS     r0,r0,r1
000094  6840              LDR      r0,[r0,#4]
000096  21ff              MOVS     r1,#0xff
000098  0209              LSLS     r1,r1,#8
00009a  4008              ANDS     r0,r0,r1
00009c  0a02              LSRS     r2,r0,#8
00009e  4628              MOV      r0,r5
0000a0  1c69              ADDS     r1,r5,#1
0000a2  b2cd              UXTB     r5,r1
0000a4  49b1              LDR      r1,|L7.876|
0000a6  540a              STRB     r2,[r1,r0]
;;;296        HostTxBuffer[fnPacketIndex++] = MeterData[u8PowerMeterID].MeterTotalWatt & 0x000000FF ;
0000a8  2024              MOVS     r0,#0x24
0000aa  4360              MULS     r0,r4,r0
0000ac  49b1              LDR      r1,|L7.884|
0000ae  1840              ADDS     r0,r0,r1
0000b0  7902              LDRB     r2,[r0,#4]
0000b2  4628              MOV      r0,r5
0000b4  1c69              ADDS     r1,r5,#1
0000b6  b2cd              UXTB     r5,r1
0000b8  49ac              LDR      r1,|L7.876|
0000ba  540a              STRB     r2,[r1,r0]
;;;297        // 49 Power Meter : Voltage	
;;;298        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterValtage & 0xFF000000) >> 24 ;
0000bc  2024              MOVS     r0,#0x24
0000be  4360              MULS     r0,r4,r0
0000c0  49ac              LDR      r1,|L7.884|
0000c2  1840              ADDS     r0,r0,r1
0000c4  6880              LDR      r0,[r0,#8]
0000c6  0e02              LSRS     r2,r0,#24
0000c8  4628              MOV      r0,r5
0000ca  1c69              ADDS     r1,r5,#1
0000cc  b2cd              UXTB     r5,r1
0000ce  49a7              LDR      r1,|L7.876|
0000d0  540a              STRB     r2,[r1,r0]
;;;299        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterValtage & 0x00FF0000) >> 16 ;
0000d2  2024              MOVS     r0,#0x24
0000d4  4360              MULS     r0,r4,r0
0000d6  49a7              LDR      r1,|L7.884|
0000d8  1840              ADDS     r0,r0,r1
0000da  6880              LDR      r0,[r0,#8]
0000dc  21ff              MOVS     r1,#0xff
0000de  0409              LSLS     r1,r1,#16
0000e0  4008              ANDS     r0,r0,r1
0000e2  0c02              LSRS     r2,r0,#16
0000e4  4628              MOV      r0,r5
0000e6  1c69              ADDS     r1,r5,#1
0000e8  b2cd              UXTB     r5,r1
0000ea  49a0              LDR      r1,|L7.876|
0000ec  540a              STRB     r2,[r1,r0]
;;;300        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterValtage & 0x0000FF00) >> 8 ;
0000ee  2024              MOVS     r0,#0x24
0000f0  4360              MULS     r0,r4,r0
0000f2  49a0              LDR      r1,|L7.884|
0000f4  1840              ADDS     r0,r0,r1
0000f6  6880              LDR      r0,[r0,#8]
0000f8  21ff              MOVS     r1,#0xff
0000fa  0209              LSLS     r1,r1,#8
0000fc  4008              ANDS     r0,r0,r1
0000fe  0a02              LSRS     r2,r0,#8
000100  4628              MOV      r0,r5
000102  1c69              ADDS     r1,r5,#1
000104  b2cd              UXTB     r5,r1
000106  4999              LDR      r1,|L7.876|
000108  540a              STRB     r2,[r1,r0]
;;;301        HostTxBuffer[fnPacketIndex++] = MeterData[u8PowerMeterID].MeterValtage & 0x000000FF ;
00010a  2024              MOVS     r0,#0x24
00010c  4360              MULS     r0,r4,r0
00010e  4999              LDR      r1,|L7.884|
000110  1840              ADDS     r0,r0,r1
000112  7a02              LDRB     r2,[r0,#8]
000114  4628              MOV      r0,r5
000116  1c69              ADDS     r1,r5,#1
000118  b2cd              UXTB     r5,r1
00011a  4994              LDR      r1,|L7.876|
00011c  540a              STRB     r2,[r1,r0]
;;;302        // 53 Power Meter : Current	
;;;303        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterCurrent & 0xFF000000) >> 24 ;
00011e  2024              MOVS     r0,#0x24
000120  4360              MULS     r0,r4,r0
000122  4994              LDR      r1,|L7.884|
000124  1840              ADDS     r0,r0,r1
000126  68c0              LDR      r0,[r0,#0xc]
000128  0e02              LSRS     r2,r0,#24
00012a  4628              MOV      r0,r5
00012c  1c69              ADDS     r1,r5,#1
00012e  b2cd              UXTB     r5,r1
000130  498e              LDR      r1,|L7.876|
000132  540a              STRB     r2,[r1,r0]
;;;304        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterCurrent & 0x00FF0000) >> 16 ;
000134  2024              MOVS     r0,#0x24
000136  4360              MULS     r0,r4,r0
000138  498e              LDR      r1,|L7.884|
00013a  1840              ADDS     r0,r0,r1
00013c  68c0              LDR      r0,[r0,#0xc]
00013e  21ff              MOVS     r1,#0xff
000140  0409              LSLS     r1,r1,#16
000142  4008              ANDS     r0,r0,r1
000144  0c02              LSRS     r2,r0,#16
000146  4628              MOV      r0,r5
000148  1c69              ADDS     r1,r5,#1
00014a  b2cd              UXTB     r5,r1
00014c  4987              LDR      r1,|L7.876|
00014e  540a              STRB     r2,[r1,r0]
;;;305        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterCurrent & 0x0000FF00) >> 8 ;
000150  2024              MOVS     r0,#0x24
000152  4360              MULS     r0,r4,r0
000154  4987              LDR      r1,|L7.884|
000156  1840              ADDS     r0,r0,r1
000158  68c0              LDR      r0,[r0,#0xc]
00015a  21ff              MOVS     r1,#0xff
00015c  0209              LSLS     r1,r1,#8
00015e  4008              ANDS     r0,r0,r1
000160  0a02              LSRS     r2,r0,#8
000162  4628              MOV      r0,r5
000164  1c69              ADDS     r1,r5,#1
000166  b2cd              UXTB     r5,r1
000168  4980              LDR      r1,|L7.876|
00016a  540a              STRB     r2,[r1,r0]
;;;306        HostTxBuffer[fnPacketIndex++] = MeterData[u8PowerMeterID].MeterCurrent & 0x000000FF ;
00016c  2024              MOVS     r0,#0x24
00016e  4360              MULS     r0,r4,r0
000170  4980              LDR      r1,|L7.884|
000172  1840              ADDS     r0,r0,r1
000174  7b02              LDRB     r2,[r0,#0xc]
000176  4628              MOV      r0,r5
000178  1c69              ADDS     r1,r5,#1
00017a  b2cd              UXTB     r5,r1
00017c  497b              LDR      r1,|L7.876|
00017e  540a              STRB     r2,[r1,r0]
;;;307        // 57 Power Meter : Freq. 		
;;;308        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterFreq & 0x0000FF00) >> 8 ;
000180  2024              MOVS     r0,#0x24
000182  4360              MULS     r0,r4,r0
000184  497b              LDR      r1,|L7.884|
000186  1840              ADDS     r0,r0,r1
000188  8b00              LDRH     r0,[r0,#0x18]
00018a  21ff              MOVS     r1,#0xff
00018c  0209              LSLS     r1,r1,#8
00018e  4008              ANDS     r0,r0,r1
000190  1202              ASRS     r2,r0,#8
000192  4628              MOV      r0,r5
000194  1c69              ADDS     r1,r5,#1
000196  b2cd              UXTB     r5,r1
000198  4974              LDR      r1,|L7.876|
00019a  540a              STRB     r2,[r1,r0]
;;;309        HostTxBuffer[fnPacketIndex++] = MeterData[u8PowerMeterID].MeterFreq & 0x000000FF ;
00019c  2024              MOVS     r0,#0x24
00019e  4360              MULS     r0,r4,r0
0001a0  4974              LDR      r1,|L7.884|
0001a2  1840              ADDS     r0,r0,r1
0001a4  7e02              LDRB     r2,[r0,#0x18]
0001a6  4628              MOV      r0,r5
0001a8  1c69              ADDS     r1,r5,#1
0001aa  b2cd              UXTB     r5,r1
0001ac  496f              LDR      r1,|L7.876|
0001ae  540a              STRB     r2,[r1,r0]
;;;310        // 59 Power Meter : Power Factor		
;;;311        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterPowerFactor & 0x0000FF00) >> 8 ;
0001b0  2024              MOVS     r0,#0x24
0001b2  4360              MULS     r0,r4,r0
0001b4  496f              LDR      r1,|L7.884|
0001b6  1840              ADDS     r0,r0,r1
0001b8  8b40              LDRH     r0,[r0,#0x1a]
0001ba  21ff              MOVS     r1,#0xff
0001bc  0209              LSLS     r1,r1,#8
0001be  4008              ANDS     r0,r0,r1
0001c0  1202              ASRS     r2,r0,#8
0001c2  4628              MOV      r0,r5
0001c4  1c69              ADDS     r1,r5,#1
0001c6  b2cd              UXTB     r5,r1
0001c8  4968              LDR      r1,|L7.876|
0001ca  540a              STRB     r2,[r1,r0]
;;;312        HostTxBuffer[fnPacketIndex++] = MeterData[u8PowerMeterID].MeterPowerFactor & 0x000000FF ;
0001cc  2024              MOVS     r0,#0x24
0001ce  4360              MULS     r0,r4,r0
0001d0  4968              LDR      r1,|L7.884|
0001d2  1840              ADDS     r0,r0,r1
0001d4  7e82              LDRB     r2,[r0,#0x1a]
0001d6  4628              MOV      r0,r5
0001d8  1c69              ADDS     r1,r5,#1
0001da  b2cd              UXTB     r5,r1
0001dc  4963              LDR      r1,|L7.876|
0001de  540a              STRB     r2,[r1,r0]
;;;313        // 61 Power Meter : Active Power	
;;;314        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterActPower & 0xFF000000) >> 24 ;
0001e0  2024              MOVS     r0,#0x24
0001e2  4360              MULS     r0,r4,r0
0001e4  4963              LDR      r1,|L7.884|
0001e6  1840              ADDS     r0,r0,r1
0001e8  6940              LDR      r0,[r0,#0x14]
0001ea  0e02              LSRS     r2,r0,#24
0001ec  4628              MOV      r0,r5
0001ee  1c69              ADDS     r1,r5,#1
0001f0  b2cd              UXTB     r5,r1
0001f2  495e              LDR      r1,|L7.876|
0001f4  540a              STRB     r2,[r1,r0]
;;;315        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterActPower & 0x00FF0000) >> 16 ;
0001f6  2024              MOVS     r0,#0x24
0001f8  4360              MULS     r0,r4,r0
0001fa  495e              LDR      r1,|L7.884|
0001fc  1840              ADDS     r0,r0,r1
0001fe  6940              LDR      r0,[r0,#0x14]
000200  21ff              MOVS     r1,#0xff
000202  0409              LSLS     r1,r1,#16
000204  4008              ANDS     r0,r0,r1
000206  0c02              LSRS     r2,r0,#16
000208  4628              MOV      r0,r5
00020a  1c69              ADDS     r1,r5,#1
00020c  b2cd              UXTB     r5,r1
00020e  4957              LDR      r1,|L7.876|
000210  540a              STRB     r2,[r1,r0]
;;;316        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterActPower & 0x0000FF00) >> 8 ;
000212  2024              MOVS     r0,#0x24
000214  4360              MULS     r0,r4,r0
000216  4957              LDR      r1,|L7.884|
000218  1840              ADDS     r0,r0,r1
00021a  6940              LDR      r0,[r0,#0x14]
00021c  21ff              MOVS     r1,#0xff
00021e  0209              LSLS     r1,r1,#8
000220  4008              ANDS     r0,r0,r1
000222  0a02              LSRS     r2,r0,#8
000224  4628              MOV      r0,r5
000226  1c69              ADDS     r1,r5,#1
000228  b2cd              UXTB     r5,r1
00022a  4950              LDR      r1,|L7.876|
00022c  540a              STRB     r2,[r1,r0]
;;;317        HostTxBuffer[fnPacketIndex++] = MeterData[u8PowerMeterID].MeterActPower & 0x000000FF ;
00022e  2024              MOVS     r0,#0x24
000230  4360              MULS     r0,r4,r0
000232  4950              LDR      r1,|L7.884|
000234  1840              ADDS     r0,r0,r1
000236  7d02              LDRB     r2,[r0,#0x14]
000238  4628              MOV      r0,r5
00023a  1c69              ADDS     r1,r5,#1
00023c  b2cd              UXTB     r5,r1
00023e  494b              LDR      r1,|L7.876|
000240  540a              STRB     r2,[r1,r0]
;;;318        // 65 Power Meter : VA	
;;;319        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterVA & 0xFF000000) >> 24 ;
000242  2024              MOVS     r0,#0x24
000244  4360              MULS     r0,r4,r0
000246  494b              LDR      r1,|L7.884|
000248  1840              ADDS     r0,r0,r1
00024a  6900              LDR      r0,[r0,#0x10]
00024c  0e02              LSRS     r2,r0,#24
00024e  4628              MOV      r0,r5
000250  1c69              ADDS     r1,r5,#1
000252  b2cd              UXTB     r5,r1
000254  4945              LDR      r1,|L7.876|
000256  540a              STRB     r2,[r1,r0]
;;;320        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterVA & 0x00FF0000) >> 16 ;
000258  2024              MOVS     r0,#0x24
00025a  4360              MULS     r0,r4,r0
00025c  4945              LDR      r1,|L7.884|
00025e  1840              ADDS     r0,r0,r1
000260  6900              LDR      r0,[r0,#0x10]
000262  21ff              MOVS     r1,#0xff
000264  0409              LSLS     r1,r1,#16
000266  4008              ANDS     r0,r0,r1
000268  0c02              LSRS     r2,r0,#16
00026a  4628              MOV      r0,r5
00026c  1c69              ADDS     r1,r5,#1
00026e  b2cd              UXTB     r5,r1
000270  493e              LDR      r1,|L7.876|
000272  540a              STRB     r2,[r1,r0]
;;;321        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterVA & 0x0000FF00) >> 8 ;
000274  2024              MOVS     r0,#0x24
000276  4360              MULS     r0,r4,r0
000278  493e              LDR      r1,|L7.884|
00027a  1840              ADDS     r0,r0,r1
00027c  6900              LDR      r0,[r0,#0x10]
00027e  21ff              MOVS     r1,#0xff
000280  0209              LSLS     r1,r1,#8
000282  4008              ANDS     r0,r0,r1
000284  0a02              LSRS     r2,r0,#8
000286  4628              MOV      r0,r5
000288  1c69              ADDS     r1,r5,#1
00028a  b2cd              UXTB     r5,r1
00028c  4937              LDR      r1,|L7.876|
00028e  540a              STRB     r2,[r1,r0]
;;;322        HostTxBuffer[fnPacketIndex++] = MeterData[u8PowerMeterID].MeterVA & 0x000000FF ;
000290  2024              MOVS     r0,#0x24
000292  4360              MULS     r0,r4,r0
000294  4937              LDR      r1,|L7.884|
000296  1840              ADDS     r0,r0,r1
000298  7c02              LDRB     r2,[r0,#0x10]
00029a  4628              MOV      r0,r5
00029c  1c69              ADDS     r1,r5,#1
00029e  b2cd              UXTB     r5,r1
0002a0  4932              LDR      r1,|L7.876|
0002a2  540a              STRB     r2,[r1,r0]
;;;323        // 69 Power Meter Balance	
;;;324        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterBalance& 0xFF000000) >> 24 ;
0002a4  2024              MOVS     r0,#0x24
0002a6  4360              MULS     r0,r4,r0
0002a8  4932              LDR      r1,|L7.884|
0002aa  1840              ADDS     r0,r0,r1
0002ac  69c0              LDR      r0,[r0,#0x1c]
0002ae  0e02              LSRS     r2,r0,#24
0002b0  4628              MOV      r0,r5
0002b2  1c69              ADDS     r1,r5,#1
0002b4  b2cd              UXTB     r5,r1
0002b6  492d              LDR      r1,|L7.876|
0002b8  540a              STRB     r2,[r1,r0]
;;;325        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterBalance & 0x00FF0000) >> 16 ;
0002ba  2024              MOVS     r0,#0x24
0002bc  4360              MULS     r0,r4,r0
0002be  492d              LDR      r1,|L7.884|
0002c0  1840              ADDS     r0,r0,r1
0002c2  69c0              LDR      r0,[r0,#0x1c]
0002c4  21ff              MOVS     r1,#0xff
0002c6  0409              LSLS     r1,r1,#16
0002c8  4008              ANDS     r0,r0,r1
0002ca  0c02              LSRS     r2,r0,#16
0002cc  4628              MOV      r0,r5
0002ce  1c69              ADDS     r1,r5,#1
0002d0  b2cd              UXTB     r5,r1
0002d2  4926              LDR      r1,|L7.876|
0002d4  540a              STRB     r2,[r1,r0]
;;;326        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].MeterBalance & 0x0000FF00) >> 8 ;
0002d6  2024              MOVS     r0,#0x24
0002d8  4360              MULS     r0,r4,r0
0002da  4926              LDR      r1,|L7.884|
0002dc  1840              ADDS     r0,r0,r1
0002de  69c0              LDR      r0,[r0,#0x1c]
0002e0  21ff              MOVS     r1,#0xff
0002e2  0209              LSLS     r1,r1,#8
0002e4  4008              ANDS     r0,r0,r1
0002e6  0a02              LSRS     r2,r0,#8
0002e8  4628              MOV      r0,r5
0002ea  1c69              ADDS     r1,r5,#1
0002ec  b2cd              UXTB     r5,r1
0002ee  491f              LDR      r1,|L7.876|
0002f0  540a              STRB     r2,[r1,r0]
;;;327        HostTxBuffer[fnPacketIndex++] = MeterData[u8PowerMeterID].MeterBalance & 0x000000FF ;
0002f2  2024              MOVS     r0,#0x24
0002f4  4360              MULS     r0,r4,r0
0002f6  491f              LDR      r1,|L7.884|
0002f8  1840              ADDS     r0,r0,r1
0002fa  7f02              LDRB     r2,[r0,#0x1c]
0002fc  4628              MOV      r0,r5
0002fe  1c69              ADDS     r1,r5,#1
000300  b2cd              UXTB     r5,r1
000302  491a              LDR      r1,|L7.876|
000304  540a              STRB     r2,[r1,r0]
;;;328        // 73 Power Meter : User UID	
;;;329        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].UserUID & 0xFF000000) >> 24 ;
000306  2024              MOVS     r0,#0x24
000308  4360              MULS     r0,r4,r0
00030a  491a              LDR      r1,|L7.884|
00030c  1840              ADDS     r0,r0,r1
00030e  6a00              LDR      r0,[r0,#0x20]
000310  0e02              LSRS     r2,r0,#24
000312  4628              MOV      r0,r5
000314  1c69              ADDS     r1,r5,#1
000316  b2cd              UXTB     r5,r1
000318  4914              LDR      r1,|L7.876|
00031a  540a              STRB     r2,[r1,r0]
;;;330        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].UserUID & 0x00FF0000) >> 16 ;
00031c  2024              MOVS     r0,#0x24
00031e  4360              MULS     r0,r4,r0
000320  4914              LDR      r1,|L7.884|
000322  1840              ADDS     r0,r0,r1
000324  6a00              LDR      r0,[r0,#0x20]
000326  21ff              MOVS     r1,#0xff
000328  0409              LSLS     r1,r1,#16
00032a  4008              ANDS     r0,r0,r1
00032c  0c02              LSRS     r2,r0,#16
00032e  4628              MOV      r0,r5
000330  1c69              ADDS     r1,r5,#1
000332  b2cd              UXTB     r5,r1
000334  490d              LDR      r1,|L7.876|
000336  540a              STRB     r2,[r1,r0]
;;;331        HostTxBuffer[fnPacketIndex++] = (MeterData[u8PowerMeterID].UserUID & 0x0000FF00) >> 8 ;
000338  2024              MOVS     r0,#0x24
00033a  4360              MULS     r0,r4,r0
00033c  490d              LDR      r1,|L7.884|
00033e  1840              ADDS     r0,r0,r1
000340  6a00              LDR      r0,[r0,#0x20]
000342  21ff              MOVS     r1,#0xff
000344  0209              LSLS     r1,r1,#8
000346  4008              ANDS     r0,r0,r1
000348  0a02              LSRS     r2,r0,#8
00034a  4628              MOV      r0,r5
00034c  1c69              ADDS     r1,r5,#1
00034e  b2cd              UXTB     r5,r1
000350  4906              LDR      r1,|L7.876|
000352  540a              STRB     r2,[r1,r0]
;;;332        HostTxBuffer[fnPacketIndex++] = MeterData[u8PowerMeterID].UserUID & 0x000000FF ;
000354  2024              MOVS     r0,#0x24
000356  4360              MULS     r0,r4,r0
000358  4906              LDR      r1,|L7.884|
00035a  1840              ADDS     r0,r0,r1
00035c  8c00              LDRH     r0,[r0,#0x20]
00035e  4903              LDR      r1,|L7.876|
000360  5548              STRB     r0,[r1,r5]
;;;333    
;;;334        CalChecksumH();			
000362  f7fffffe          BL       CalChecksumH
;;;335    	
;;;336    }
000366  bd70              POP      {r4-r6,pc}
;;;337    
                          ENDP

                  |L7.872|
                          DCD      HostPowerMeterIndex
                  |L7.876|
                          DCD      HostTxBuffer
                  |L7.880|
                          DCD      fgToHostFlag
                  |L7.884|
                          DCD      MeterData
                  |L7.888|
                          DCD      MeterErrorRate

                          AREA ||i.SendHost_SystemInformation||, CODE, READONLY, ALIGN=2

                  SendHost_SystemInformation PROC
;;;251    
;;;252    void SendHost_SystemInformation(void)
000000  b570              PUSH     {r4-r6,lr}
;;;253    {
;;;254        uint8_t fnPacketIndex,u8MeterIDIndex;
;;;255        
;;;256        u8MeterIDIndex = MyMeterID-1;
000002  4841              LDR      r0,|L8.264|
000004  7800              LDRB     r0,[r0,#0]  ; MyMeterID
000006  1e40              SUBS     r0,r0,#1
000008  b2c5              UXTB     r5,r0
;;;257        HostTxBuffer[2] = METER_RSP_SYS_INFO ;	
00000a  2031              MOVS     r0,#0x31
00000c  493f              LDR      r1,|L8.268|
00000e  7088              STRB     r0,[r1,#2]
;;;258        HostTxBuffer[3] = fgToHostFlag; 	
000010  483f              LDR      r0,|L8.272|
000012  7800              LDRB     r0,[r0,#0]  ; fgToHostFlag
000014  70c8              STRB     r0,[r1,#3]
;;;259        HostTxBuffer[4] = fgToHostRSPFlag; 
000016  483f              LDR      r0,|L8.276|
000018  7800              LDRB     r0,[r0,#0]  ; fgToHostRSPFlag
00001a  7108              STRB     r0,[r1,#4]
;;;260    
;;;261        fnPacketIndex = 5 ; 
00001c  2405              MOVS     r4,#5
;;;262        HostTxBuffer[fnPacketIndex++] = (PowerMeterError & 0xFF000000) >> 24 ;
00001e  483e              LDR      r0,|L8.280|
000020  6800              LDR      r0,[r0,#0]  ; PowerMeterError
000022  0e02              LSRS     r2,r0,#24
000024  4621              MOV      r1,r4
000026  1c64              ADDS     r4,r4,#1
000028  4838              LDR      r0,|L8.268|
00002a  5442              STRB     r2,[r0,r1]
;;;263        HostTxBuffer[fnPacketIndex++] = (PowerMeterError & 0x00FF0000) >> 16 ;
00002c  483a              LDR      r0,|L8.280|
00002e  6800              LDR      r0,[r0,#0]  ; PowerMeterError
000030  21ff              MOVS     r1,#0xff
000032  0409              LSLS     r1,r1,#16
000034  4008              ANDS     r0,r0,r1
000036  0c02              LSRS     r2,r0,#16
000038  4621              MOV      r1,r4
00003a  1c64              ADDS     r4,r4,#1
00003c  4833              LDR      r0,|L8.268|
00003e  5442              STRB     r2,[r0,r1]
;;;264        HostTxBuffer[fnPacketIndex++] = (PowerMeterError & 0x0000FF00) >> 8 ;
000040  4835              LDR      r0,|L8.280|
000042  6800              LDR      r0,[r0,#0]  ; PowerMeterError
000044  21ff              MOVS     r1,#0xff
000046  0209              LSLS     r1,r1,#8
000048  4008              ANDS     r0,r0,r1
00004a  0a02              LSRS     r2,r0,#8
00004c  4621              MOV      r1,r4
00004e  1c64              ADDS     r4,r4,#1
000050  482e              LDR      r0,|L8.268|
000052  5442              STRB     r2,[r0,r1]
;;;265        HostTxBuffer[fnPacketIndex++] = PowerMeterError & 0x000000FF ;
000054  4830              LDR      r0,|L8.280|
000056  7802              LDRB     r2,[r0,#0]  ; PowerMeterError
000058  4621              MOV      r1,r4
00005a  1c64              ADDS     r4,r4,#1
00005c  482b              LDR      r0,|L8.268|
00005e  5442              STRB     r2,[r0,r1]
;;;266        HostTxBuffer[fnPacketIndex++] = (PowerMeterTxCounter[u8MeterIDIndex] & 0xFF000000) >> 24 ;
000060  00a8              LSLS     r0,r5,#2
000062  492e              LDR      r1,|L8.284|
000064  5808              LDR      r0,[r1,r0]
000066  0e02              LSRS     r2,r0,#24
000068  4621              MOV      r1,r4
00006a  1c64              ADDS     r4,r4,#1
00006c  4827              LDR      r0,|L8.268|
00006e  5442              STRB     r2,[r0,r1]
;;;267        HostTxBuffer[fnPacketIndex++] = (PowerMeterTxCounter[u8MeterIDIndex] & 0x00FF0000) >> 16 ;
000070  00a8              LSLS     r0,r5,#2
000072  492a              LDR      r1,|L8.284|
000074  5808              LDR      r0,[r1,r0]
000076  21ff              MOVS     r1,#0xff
000078  0409              LSLS     r1,r1,#16
00007a  4008              ANDS     r0,r0,r1
00007c  0c02              LSRS     r2,r0,#16
00007e  4620              MOV      r0,r4
000080  1c61              ADDS     r1,r4,#1
000082  b2cc              UXTB     r4,r1
000084  4921              LDR      r1,|L8.268|
000086  540a              STRB     r2,[r1,r0]
;;;268        HostTxBuffer[fnPacketIndex++] = (PowerMeterTxCounter[u8MeterIDIndex] & 0x0000FF00) >> 8 ;
000088  00a8              LSLS     r0,r5,#2
00008a  4924              LDR      r1,|L8.284|
00008c  5808              LDR      r0,[r1,r0]
00008e  21ff              MOVS     r1,#0xff
000090  0209              LSLS     r1,r1,#8
000092  4008              ANDS     r0,r0,r1
000094  0a02              LSRS     r2,r0,#8
000096  4620              MOV      r0,r4
000098  1c61              ADDS     r1,r4,#1
00009a  b2cc              UXTB     r4,r1
00009c  491b              LDR      r1,|L8.268|
00009e  540a              STRB     r2,[r1,r0]
;;;269        HostTxBuffer[fnPacketIndex++] = PowerMeterTxCounter[u8MeterIDIndex] & 0x000000FF ;    
0000a0  00a8              LSLS     r0,r5,#2
0000a2  491e              LDR      r1,|L8.284|
0000a4  5c0a              LDRB     r2,[r1,r0]
0000a6  4620              MOV      r0,r4
0000a8  1c61              ADDS     r1,r4,#1
0000aa  b2cc              UXTB     r4,r1
0000ac  4917              LDR      r1,|L8.268|
0000ae  540a              STRB     r2,[r1,r0]
;;;270        HostTxBuffer[fnPacketIndex++] = (PowerMeterRxCounter[u8MeterIDIndex] & 0xFF000000) >> 24 ;
0000b0  00a8              LSLS     r0,r5,#2
0000b2  491b              LDR      r1,|L8.288|
0000b4  5808              LDR      r0,[r1,r0]
0000b6  0e02              LSRS     r2,r0,#24
0000b8  4620              MOV      r0,r4
0000ba  1c61              ADDS     r1,r4,#1
0000bc  b2cc              UXTB     r4,r1
0000be  4913              LDR      r1,|L8.268|
0000c0  540a              STRB     r2,[r1,r0]
;;;271        HostTxBuffer[fnPacketIndex++] = (PowerMeterRxCounter[u8MeterIDIndex] & 0x00FF0000) >> 16 ;
0000c2  00a8              LSLS     r0,r5,#2
0000c4  4916              LDR      r1,|L8.288|
0000c6  5808              LDR      r0,[r1,r0]
0000c8  21ff              MOVS     r1,#0xff
0000ca  0409              LSLS     r1,r1,#16
0000cc  4008              ANDS     r0,r0,r1
0000ce  0c02              LSRS     r2,r0,#16
0000d0  4620              MOV      r0,r4
0000d2  1c61              ADDS     r1,r4,#1
0000d4  b2cc              UXTB     r4,r1
0000d6  490d              LDR      r1,|L8.268|
0000d8  540a              STRB     r2,[r1,r0]
;;;272        HostTxBuffer[fnPacketIndex++] = (PowerMeterRxCounter[u8MeterIDIndex] & 0x0000FF00) >> 8 ;
0000da  00a8              LSLS     r0,r5,#2
0000dc  4910              LDR      r1,|L8.288|
0000de  5808              LDR      r0,[r1,r0]
0000e0  21ff              MOVS     r1,#0xff
0000e2  0209              LSLS     r1,r1,#8
0000e4  4008              ANDS     r0,r0,r1
0000e6  0a02              LSRS     r2,r0,#8
0000e8  4620              MOV      r0,r4
0000ea  1c61              ADDS     r1,r4,#1
0000ec  b2cc              UXTB     r4,r1
0000ee  4907              LDR      r1,|L8.268|
0000f0  540a              STRB     r2,[r1,r0]
;;;273        HostTxBuffer[fnPacketIndex++] = PowerMeterRxCounter[u8MeterIDIndex] & 0x000000FF ;
0000f2  00a8              LSLS     r0,r5,#2
0000f4  490a              LDR      r1,|L8.288|
0000f6  5c0a              LDRB     r2,[r1,r0]
0000f8  4620              MOV      r0,r4
0000fa  1c61              ADDS     r1,r4,#1
0000fc  b2cc              UXTB     r4,r1
0000fe  4903              LDR      r1,|L8.268|
000100  540a              STRB     r2,[r1,r0]
;;;274        
;;;275        CalChecksumH();	
000102  f7fffffe          BL       CalChecksumH
;;;276        
;;;277    }
000106  bd70              POP      {r4-r6,pc}
;;;278    
                          ENDP

                  |L8.264|
                          DCD      MyMeterID
                  |L8.268|
                          DCD      HostTxBuffer
                  |L8.272|
                          DCD      fgToHostFlag
                  |L8.276|
                          DCD      fgToHostRSPFlag
                  |L8.280|
                          DCD      PowerMeterError
                  |L8.284|
                          DCD      PowerMeterTxCounter
                  |L8.288|
                          DCD      PowerMeterRxCounter

                          AREA ||i.SystemSwitchProcess||, CODE, READONLY, ALIGN=2

                  SystemSwitchProcess PROC
;;;389    
;;;390    void SystemSwitchProcess(void)
000000  b538              PUSH     {r3-r5,lr}
;;;391    {
;;;392    	float floatTemp;
;;;393    	uint8_t * tmpAddr;
;;;394    	
;;;395    	// Reader SW
;;;396    	if ( TokenHost[3] == 0xA5 )
000002  4835              LDR      r0,|L9.216|
000004  78c0              LDRB     r0,[r0,#3]  ; TokenHost
000006  28a5              CMP      r0,#0xa5
000008  d165              BNE      |L9.214|
;;;397    	{		
;;;398    		
;;;399    		// Meter LED ON
;;;400    		if ( TokenHost[4] == 0x05 )
00000a  4833              LDR      r0,|L9.216|
00000c  7900              LDRB     r0,[r0,#4]  ; TokenHost
00000e  2805              CMP      r0,#5
000010  d102              BNE      |L9.24|
;;;401    		{
;;;402    			LED_G_On();
000012  2000              MOVS     r0,#0
000014  4931              LDR      r1,|L9.220|
000016  61c8              STR      r0,[r1,#0x1c]
                  |L9.24|
;;;403    		}
;;;404    		// Meter LED OFF
;;;405    		if ( TokenHost[4] == 0x50 )
000018  482f              LDR      r0,|L9.216|
00001a  7900              LDRB     r0,[r0,#4]  ; TokenHost
00001c  2850              CMP      r0,#0x50
00001e  d102              BNE      |L9.38|
;;;406    		{
;;;407    			LED_G_Off();
000020  2001              MOVS     r0,#1
000022  492e              LDR      r1,|L9.220|
000024  61c8              STR      r0,[r1,#0x1c]
                  |L9.38|
;;;408    		}
;;;409    		if ( TokenHost[4] == 0x06 )
;;;410    		{
;;;411    			//SSR_Off();
;;;412    		}
;;;413    		if ( TokenHost[4] == 0x60 )
;;;414    		{
;;;415    			//SSR_On();
;;;416    		}
;;;417    		if ( TokenHost[4] == 0x70 )
;;;418    		{
;;;419    			
;;;420    		}
;;;421    		if ( (TokenHost[4] == 0x85) && (TokenHost[5] == 0xBB) )
000026  482c              LDR      r0,|L9.216|
000028  7900              LDRB     r0,[r0,#4]  ; TokenHost
00002a  2885              CMP      r0,#0x85
00002c  d107              BNE      |L9.62|
00002e  482a              LDR      r0,|L9.216|
000030  7940              LDRB     r0,[r0,#5]  ; TokenHost
000032  28bb              CMP      r0,#0xbb
000034  d103              BNE      |L9.62|
;;;422    
;;;423    		{
;;;424    			ReadMeterTime = TokenHost[6] ;
000036  4828              LDR      r0,|L9.216|
000038  7980              LDRB     r0,[r0,#6]  ; TokenHost
00003a  4929              LDR      r1,|L9.224|
00003c  8008              STRH     r0,[r1,#0]
                  |L9.62|
;;;425    		}
;;;426    		if ( (TokenHost[4] == 0x86) && (TokenHost[5] == 0xBB))
00003e  4826              LDR      r0,|L9.216|
000040  7900              LDRB     r0,[r0,#4]  ; TokenHost
000042  2886              CMP      r0,#0x86
000044  d107              BNE      |L9.86|
000046  4824              LDR      r0,|L9.216|
000048  7940              LDRB     r0,[r0,#5]  ; TokenHost
00004a  28bb              CMP      r0,#0xbb
00004c  d103              BNE      |L9.86|
;;;427    
;;;428    		{
;;;429    			MeterType = TokenHost[6] ;
00004e  4822              LDR      r0,|L9.216|
000050  7980              LDRB     r0,[r0,#6]  ; TokenHost
000052  4924              LDR      r1,|L9.228|
000054  7008              STRB     r0,[r1,#0]
                  |L9.86|
;;;430    		}
;;;431    		
;;;432    		if ( (TokenHost[4]  == 0x5B)  && (TokenHost[5]  == 0xCC) )
000056  4820              LDR      r0,|L9.216|
000058  7900              LDRB     r0,[r0,#4]  ; TokenHost
00005a  285b              CMP      r0,#0x5b
00005c  d107              BNE      |L9.110|
00005e  481e              LDR      r0,|L9.216|
000060  7940              LDRB     r0,[r0,#5]  ; TokenHost
000062  28cc              CMP      r0,#0xcc
000064  d103              BNE      |L9.110|
;;;433    		{			
;;;434    			ResetHostUART();
000066  f7fffffe          BL       ResetHostUART
;;;435    			ResetReaderUART();		
00006a  f7fffffe          BL       ResetReaderUART
                  |L9.110|
;;;436    		}
;;;437    		
;;;438    		if ( (TokenHost[4]  == 0x5A)  && (TokenHost[5]  == 0xBB) )
00006e  481a              LDR      r0,|L9.216|
000070  7900              LDRB     r0,[r0,#4]  ; TokenHost
000072  285a              CMP      r0,#0x5a
000074  d11b              BNE      |L9.174|
000076  4818              LDR      r0,|L9.216|
000078  7940              LDRB     r0,[r0,#5]  ; TokenHost
00007a  28bb              CMP      r0,#0xbb
00007c  d117              BNE      |L9.174|
;;;439    		{
;;;440    			NVIC_SystemReset(); 
00007e  bf00              NOP      
000080  bf00              NOP      
000082  bf00              NOP      
000084  bf00              NOP      
000086  bf00              NOP      
000088  f3bf8f4f          DSB      
00008c  bf00              NOP      
00008e  bf00              NOP      
000090  bf00              NOP      
000092  4815              LDR      r0,|L9.232|
000094  4915              LDR      r1,|L9.236|
000096  60c8              STR      r0,[r1,#0xc]
000098  bf00              NOP      
00009a  bf00              NOP      
00009c  bf00              NOP      
00009e  f3bf8f4f          DSB      
0000a2  bf00              NOP      
0000a4  bf00              NOP      
0000a6  bf00              NOP      
0000a8  bf00              NOP      
                  |L9.170|
0000aa  bf00              NOP      
0000ac  e7fd              B        |L9.170|
                  |L9.174|
;;;441    		}
;;;442    
;;;443    		if ( TokenHost[20] == 0xAA )
0000ae  480a              LDR      r0,|L9.216|
0000b0  7d00              LDRB     r0,[r0,#0x14]  ; TokenHost
0000b2  28aa              CMP      r0,#0xaa
0000b4  d10f              BNE      |L9.214|
;;;444    		{		
;;;445    			tmpAddr = (uint8_t*) &floatTemp;
0000b6  466c              MOV      r4,sp
;;;446    			tmpAddr[0] = TokenHost[21];
0000b8  4807              LDR      r0,|L9.216|
0000ba  7d40              LDRB     r0,[r0,#0x15]  ; TokenHost
0000bc  7020              STRB     r0,[r4,#0]
;;;447    			tmpAddr[1] = TokenHost[22];
0000be  4806              LDR      r0,|L9.216|
0000c0  7d80              LDRB     r0,[r0,#0x16]  ; TokenHost
0000c2  7060              STRB     r0,[r4,#1]
;;;448    			tmpAddr[2] = TokenHost[23];
0000c4  4804              LDR      r0,|L9.216|
0000c6  7dc0              LDRB     r0,[r0,#0x17]  ; TokenHost
0000c8  70a0              STRB     r0,[r4,#2]
;;;449    			tmpAddr[3] = TokenHost[24];
0000ca  4803              LDR      r0,|L9.216|
0000cc  7e00              LDRB     r0,[r0,#0x18]  ; TokenHost
0000ce  70e0              STRB     r0,[r4,#3]
;;;450    			Min_LowBalance = floatTemp;
0000d0  4907              LDR      r1,|L9.240|
0000d2  9800              LDR      r0,[sp,#0]
0000d4  6008              STR      r0,[r1,#0]  ; Min_LowBalance
                  |L9.214|
;;;451    		}
;;;452    		
;;;453    	}
;;;454    	
;;;455    	
;;;456    	
;;;457    }
0000d6  bd38              POP      {r3-r5,pc}
;;;458    
                          ENDP

                  |L9.216|
                          DCD      TokenHost
                  |L9.220|
                          DCD      0x500042c0
                  |L9.224|
                          DCD      ReadMeterTime
                  |L9.228|
                          DCD      MeterType
                  |L9.232|
                          DCD      0x05fa0004
                  |L9.236|
                          DCD      0xe000ed00
                  |L9.240|
                          DCD      Min_LowBalance

                          AREA ||i._SendStringToHOST||, CODE, READONLY, ALIGN=2

                  _SendStringToHOST PROC
;;;459    
;;;460    uint8_t _SendStringToHOST(uint8_t *Str, uint8_t len)
000000  b570              PUSH     {r4-r6,lr}
;;;461    {
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;462    	
;;;463    	uint8_t idx;
;;;464    
;;;465    	if( (HOSTTxQ_cnt+len) > MAX_HOST_TXQ_LENGTH )
000006  4818              LDR      r0,|L10.104|
000008  7800              LDRB     r0,[r0,#0]  ; HOSTTxQ_cnt
00000a  1940              ADDS     r0,r0,r5
00000c  2864              CMP      r0,#0x64
00000e  dd01              BLE      |L10.20|
;;;466    	{
;;;467    		return 0x01 ;
000010  2001              MOVS     r0,#1
                  |L10.18|
;;;468    	} else {
;;;469    	        
;;;470    		EnableHostUartTx();
;;;471    		for(idx=0;idx<len;idx++)
;;;472    		{
;;;473    			HOSTTxQ[HOSTTxQ_wp]=Str[idx];
;;;474    			HOSTTxQ_wp++;
;;;475    			if(HOSTTxQ_wp>=MAX_HOST_TXQ_LENGTH)
;;;476    			{
;;;477    				HOSTTxQ_wp=0;
;;;478    			}
;;;479    			HOSTTxQ_cnt++;
;;;480    		}        				
;;;481    		UART_EnableInt(UART0, (UART_INTEN_THREIEN_Msk ));
;;;482    		NVIC_EnableIRQ(UART02_IRQn);
;;;483                   
;;;484    	}                   
;;;485    	return 0x00 ;
;;;486    }
000012  bd70              POP      {r4-r6,pc}
                  |L10.20|
000014  f7fffffe          BL       EnableHostUartTx
000018  2400              MOVS     r4,#0                 ;471
00001a  e016              B        |L10.74|
                  |L10.28|
00001c  5d30              LDRB     r0,[r6,r4]            ;473
00001e  4913              LDR      r1,|L10.108|
000020  4a13              LDR      r2,|L10.112|
000022  7812              LDRB     r2,[r2,#0]            ;473  ; HOSTTxQ_wp
000024  5488              STRB     r0,[r1,r2]            ;473
000026  4812              LDR      r0,|L10.112|
000028  7800              LDRB     r0,[r0,#0]            ;474  ; HOSTTxQ_wp
00002a  1c40              ADDS     r0,r0,#1              ;474
00002c  4910              LDR      r1,|L10.112|
00002e  7008              STRB     r0,[r1,#0]            ;474
000030  4608              MOV      r0,r1                 ;475
000032  7800              LDRB     r0,[r0,#0]            ;475  ; HOSTTxQ_wp
000034  2864              CMP      r0,#0x64              ;475
000036  db01              BLT      |L10.60|
000038  2000              MOVS     r0,#0                 ;477
00003a  7008              STRB     r0,[r1,#0]            ;477
                  |L10.60|
00003c  480a              LDR      r0,|L10.104|
00003e  7800              LDRB     r0,[r0,#0]            ;479  ; HOSTTxQ_cnt
000040  1c40              ADDS     r0,r0,#1              ;479
000042  4909              LDR      r1,|L10.104|
000044  7008              STRB     r0,[r1,#0]            ;479
000046  1c60              ADDS     r0,r4,#1              ;471
000048  b2c4              UXTB     r4,r0                 ;471
                  |L10.74|
00004a  42ac              CMP      r4,r5                 ;471
00004c  dbe6              BLT      |L10.28|
00004e  2102              MOVS     r1,#2                 ;481
000050  4808              LDR      r0,|L10.116|
000052  f7fffffe          BL       UART_EnableInt
000056  200c              MOVS     r0,#0xc               ;482
000058  2101              MOVS     r1,#1                 ;482
00005a  4081              LSLS     r1,r1,r0              ;482
00005c  4a06              LDR      r2,|L10.120|
00005e  6011              STR      r1,[r2,#0]            ;482
000060  bf00              NOP                            ;482
000062  bf00              NOP                            ;482
000064  2000              MOVS     r0,#0                 ;485
000066  e7d4              B        |L10.18|
;;;487    
                          ENDP

                  |L10.104|
                          DCD      HOSTTxQ_cnt
                  |L10.108|
                          DCD      HOSTTxQ
                  |L10.112|
                          DCD      HOSTTxQ_wp
                  |L10.116|
                          DCD      0x40050000
                  |L10.120|
                          DCD      0xe000e100

                          AREA ||.data||, DATA, ALIGN=2

                  CmdType
000000  00                DCB      0x00
                  WaitTime
000001  00                DCB      0x00
                  bReSendPowerEnable
000002  00                DCB      0x00
                  fgSetStartData
000003  00                DCB      0x00
                  LastMessDate
000004  000000            DCB      0x00,0x00,0x00
                  CenterRoomMode
000007  00                DCB      0x00
                  CenterNowUser
000008  00                DCB      0x00
                  CenterUnitPrice
000009  00                DCB      0x00
                  HostMeterIndex
00000a  00                DCB      0x00
                  HostMemberIndex
00000b  00                DCB      0x00
                  LastPackageChecksum
00000c  00                DCB      0x00
                  GetUserIndex
00000d  00                DCB      0x00
                  PkgIndex
00000e  00                DCB      0x00
                  fgUserChangeMode
00000f  00                DCB      0x00
                  Min_LowBalance
                          DCD      0x00000000
                  HostPowerMeterIndex
000014  00                DCB      0x00
                  MeterActive
000015  00                DCB      0x00
                  LastDataUpdated
000016  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\AO_HostProcess.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_AO_HostProcess_c_121888b5____REV16|
#line 388 "..\\..\\..\\NUC126_Series_BSP_CMSIS_V3.00.005\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___16_AO_HostProcess_c_121888b5____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_AO_HostProcess_c_121888b5____REVSH|
#line 402
|__asm___16_AO_HostProcess_c_121888b5____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
